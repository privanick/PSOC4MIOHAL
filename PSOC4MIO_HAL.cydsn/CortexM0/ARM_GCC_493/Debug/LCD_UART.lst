ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LCD_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LCD_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	LCD_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	LCD_UartInit, %function
  23              	LCD_UartInit:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\LCD_UART.c"
   1:.\Generated_Source\PSoC4/LCD_UART.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/LCD_UART.c **** * \file LCD_UART.c
   3:.\Generated_Source\PSoC4/LCD_UART.c **** * \version 3.20
   4:.\Generated_Source\PSoC4/LCD_UART.c **** *
   5:.\Generated_Source\PSoC4/LCD_UART.c **** * \brief
   6:.\Generated_Source\PSoC4/LCD_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/LCD_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/LCD_UART.c **** *
   9:.\Generated_Source\PSoC4/LCD_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/LCD_UART.c **** *
  11:.\Generated_Source\PSoC4/LCD_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/LCD_UART.c **** * \copyright
  13:.\Generated_Source\PSoC4/LCD_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/LCD_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/LCD_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/LCD_UART.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/LCD_UART.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/LCD_UART.c **** 
  19:.\Generated_Source\PSoC4/LCD_UART.c **** #include "LCD_PVT.h"
  20:.\Generated_Source\PSoC4/LCD_UART.c **** #include "LCD_SPI_UART_PVT.h"
  21:.\Generated_Source\PSoC4/LCD_UART.c **** #include "cyapicallbacks.h"
  22:.\Generated_Source\PSoC4/LCD_UART.c **** 
  23:.\Generated_Source\PSoC4/LCD_UART.c **** #if (LCD_UART_WAKE_ENABLE_CONST && LCD_UART_RX_WAKEUP_IRQ)
  24:.\Generated_Source\PSoC4/LCD_UART.c ****     /**
  25:.\Generated_Source\PSoC4/LCD_UART.c ****     * \addtogroup group_globals
  26:.\Generated_Source\PSoC4/LCD_UART.c ****     * \{
  27:.\Generated_Source\PSoC4/LCD_UART.c ****     */
  28:.\Generated_Source\PSoC4/LCD_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:.\Generated_Source\PSoC4/LCD_UART.c ****     * functionality when LCD_Sleep() function is called:
  30:.\Generated_Source\PSoC4/LCD_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:.\Generated_Source\PSoC4/LCD_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:.\Generated_Source\PSoC4/LCD_UART.c ****     */
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 2


  33:.\Generated_Source\PSoC4/LCD_UART.c ****     uint8 LCD_skipStart = 1u;
  34:.\Generated_Source\PSoC4/LCD_UART.c ****     /** \} globals */
  35:.\Generated_Source\PSoC4/LCD_UART.c **** #endif /* (LCD_UART_WAKE_ENABLE_CONST && LCD_UART_RX_WAKEUP_IRQ) */
  36:.\Generated_Source\PSoC4/LCD_UART.c **** 
  37:.\Generated_Source\PSoC4/LCD_UART.c **** #if(LCD_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/LCD_UART.c **** 
  39:.\Generated_Source\PSoC4/LCD_UART.c ****     /***************************************
  40:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Configuration Structure Initialization
  41:.\Generated_Source\PSoC4/LCD_UART.c ****     ***************************************/
  42:.\Generated_Source\PSoC4/LCD_UART.c **** 
  43:.\Generated_Source\PSoC4/LCD_UART.c ****     const LCD_UART_INIT_STRUCT LCD_configUart =
  44:.\Generated_Source\PSoC4/LCD_UART.c ****     {
  45:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_SUB_MODE,
  46:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_DIRECTION,
  47:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_DATA_BITS_NUM,
  48:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_PARITY_TYPE,
  49:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_STOP_BITS_NUM,
  50:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_OVS_FACTOR,
  51:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_IRDA_LOW_POWER,
  52:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_MEDIAN_FILTER_ENABLE,
  53:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_RETRY_ON_NACK,
  54:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_IRDA_POLARITY,
  55:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_DROP_ON_PARITY_ERR,
  56:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_DROP_ON_FRAME_ERR,
  57:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_WAKE_ENABLE,
  58:.\Generated_Source\PSoC4/LCD_UART.c ****         0u,
  59:.\Generated_Source\PSoC4/LCD_UART.c ****         NULL,
  60:.\Generated_Source\PSoC4/LCD_UART.c ****         0u,
  61:.\Generated_Source\PSoC4/LCD_UART.c ****         NULL,
  62:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_MP_MODE_ENABLE,
  63:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_MP_ACCEPT_ADDRESS,
  64:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_MP_RX_ADDRESS,
  65:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_MP_RX_ADDRESS_MASK,
  66:.\Generated_Source\PSoC4/LCD_UART.c ****         (uint32) LCD_SCB_IRQ_INTERNAL,
  67:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_INTR_RX_MASK,
  68:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_RX_TRIGGER_LEVEL,
  69:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_INTR_TX_MASK,
  70:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_TX_TRIGGER_LEVEL,
  71:.\Generated_Source\PSoC4/LCD_UART.c ****         (uint8) LCD_UART_BYTE_MODE_ENABLE,
  72:.\Generated_Source\PSoC4/LCD_UART.c ****         (uint8) LCD_UART_CTS_ENABLE,
  73:.\Generated_Source\PSoC4/LCD_UART.c ****         (uint8) LCD_UART_CTS_POLARITY,
  74:.\Generated_Source\PSoC4/LCD_UART.c ****         (uint8) LCD_UART_RTS_POLARITY,
  75:.\Generated_Source\PSoC4/LCD_UART.c ****         (uint8) LCD_UART_RTS_FIFO_LEVEL
  76:.\Generated_Source\PSoC4/LCD_UART.c ****     };
  77:.\Generated_Source\PSoC4/LCD_UART.c **** 
  78:.\Generated_Source\PSoC4/LCD_UART.c **** 
  79:.\Generated_Source\PSoC4/LCD_UART.c ****     /*******************************************************************************
  80:.\Generated_Source\PSoC4/LCD_UART.c ****     * Function Name: LCD_UartInit
  81:.\Generated_Source\PSoC4/LCD_UART.c ****     ****************************************************************************//**
  82:.\Generated_Source\PSoC4/LCD_UART.c ****     *
  83:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Configures the LCD for UART operation.
  84:.\Generated_Source\PSoC4/LCD_UART.c ****     *
  85:.\Generated_Source\PSoC4/LCD_UART.c ****     *  This function is intended specifically to be used when the LCD
  86:.\Generated_Source\PSoC4/LCD_UART.c ****     *  configuration is set to “Unconfigured LCD” in the customizer.
  87:.\Generated_Source\PSoC4/LCD_UART.c ****     *  After initializing the LCD in UART mode using this function,
  88:.\Generated_Source\PSoC4/LCD_UART.c ****     *  the component can be enabled using the LCD_Start() or
  89:.\Generated_Source\PSoC4/LCD_UART.c ****     * LCD_Enable() function.
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 3


  90:.\Generated_Source\PSoC4/LCD_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:.\Generated_Source\PSoC4/LCD_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:.\Generated_Source\PSoC4/LCD_UART.c ****     *  be provided by the customizer settings.
  93:.\Generated_Source\PSoC4/LCD_UART.c ****     *
  94:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:.\Generated_Source\PSoC4/LCD_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:.\Generated_Source\PSoC4/LCD_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:.\Generated_Source\PSoC4/LCD_UART.c ****     *
  98:.\Generated_Source\PSoC4/LCD_UART.c ****     *******************************************************************************/
  99:.\Generated_Source\PSoC4/LCD_UART.c ****     void LCD_UartInit(const LCD_UART_INIT_STRUCT *config)
 100:.\Generated_Source\PSoC4/LCD_UART.c ****     {
 101:.\Generated_Source\PSoC4/LCD_UART.c ****         uint32 pinsConfig;
 102:.\Generated_Source\PSoC4/LCD_UART.c **** 
 103:.\Generated_Source\PSoC4/LCD_UART.c ****         if (NULL == config)
 104:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 105:.\Generated_Source\PSoC4/LCD_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 107:.\Generated_Source\PSoC4/LCD_UART.c ****         else
 108:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 109:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:.\Generated_Source\PSoC4/LCD_UART.c ****             pinsConfig  = config->direction;
 111:.\Generated_Source\PSoC4/LCD_UART.c **** 
 112:.\Generated_Source\PSoC4/LCD_UART.c ****         #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 113:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Add RTS and CTS pins to configure */
 114:.\Generated_Source\PSoC4/LCD_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (LCD_UART_RTS_PIN_ENABLE) : (0u);
 115:.\Generated_Source\PSoC4/LCD_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (LCD_UART_CTS_PIN_ENABLE) : (0u);
 116:.\Generated_Source\PSoC4/LCD_UART.c ****         #endif /* !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1) */
 117:.\Generated_Source\PSoC4/LCD_UART.c **** 
 118:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure pins */
 119:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_SetPins(LCD_SCB_MODE_UART, config->mode, pinsConfig);
 120:.\Generated_Source\PSoC4/LCD_UART.c **** 
 121:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Store internal configuration */
 122:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_scbMode       = (uint8) LCD_SCB_MODE_UART;
 123:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_scbEnableWake = (uint8) config->enableWake;
 124:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_scbEnableIntr = (uint8) config->enableInterrupt;
 125:.\Generated_Source\PSoC4/LCD_UART.c **** 
 126:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Set RX direction internal variables */
 127:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_rxBuffer      =         config->rxBuffer;
 128:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_rxDataBits    = (uint8) config->dataBits;
 129:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_rxBufferSize  = (uint8) config->rxBufferSize;
 130:.\Generated_Source\PSoC4/LCD_UART.c **** 
 131:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Set TX direction internal variables */
 132:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_txBuffer      =         config->txBuffer;
 133:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_txDataBits    = (uint8) config->dataBits;
 134:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_txBufferSize  = (uint8) config->txBufferSize;
 135:.\Generated_Source\PSoC4/LCD_UART.c **** 
 136:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure UART interface */
 137:.\Generated_Source\PSoC4/LCD_UART.c ****             if(LCD_UART_MODE_IRDA == config->mode)
 138:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 139:.\Generated_Source\PSoC4/LCD_UART.c ****                 /* OVS settings: IrDA */
 140:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 (LCD_UART_GET_CTRL_OVS_IRDA_LP(config->oversample))
 142:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 (LCD_CTRL_OVS_IRDA_OVS16));
 143:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 144:.\Generated_Source\PSoC4/LCD_UART.c ****             else
 145:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 146:.\Generated_Source\PSoC4/LCD_UART.c ****                 /* OVS settings: UART and SmartCard */
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 4


 147:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_CTRL_REG  = LCD_GET_CTRL_OVS(config->oversample);
 148:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 149:.\Generated_Source\PSoC4/LCD_UART.c **** 
 150:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_CTRL_REG     |= LCD_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:.\Generated_Source\PSoC4/LCD_UART.c ****                                              LCD_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr) 
 152:.\Generated_Source\PSoC4/LCD_UART.c ****                                              LCD_CTRL_UART;
 153:.\Generated_Source\PSoC4/LCD_UART.c **** 
 154:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_CTRL_REG = LCD_GET_UART_CTRL_MODE(config->mode);
 156:.\Generated_Source\PSoC4/LCD_UART.c **** 
 157:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure RX direction */
 158:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_RX_CTRL_REG = LCD_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:.\Generated_Source\PSoC4/LCD_UART.c ****                                         LCD_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)    
 160:.\Generated_Source\PSoC4/LCD_UART.c ****                                         LCD_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)      
 161:.\Generated_Source\PSoC4/LCD_UART.c ****                                         LCD_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnParit
 162:.\Generated_Source\PSoC4/LCD_UART.c ****                                         LCD_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrameE
 163:.\Generated_Source\PSoC4/LCD_UART.c **** 
 164:.\Generated_Source\PSoC4/LCD_UART.c ****             if(LCD_UART_PARITY_NONE != config->parity)
 165:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 166:.\Generated_Source\PSoC4/LCD_UART.c ****                LCD_UART_RX_CTRL_REG |= LCD_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:.\Generated_Source\PSoC4/LCD_UART.c ****                                                     LCD_UART_RX_CTRL_PARITY_ENABLED;
 168:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 169:.\Generated_Source\PSoC4/LCD_UART.c **** 
 170:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_RX_CTRL_REG      = LCD_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 LCD_GET_RX_CTRL_MEDIAN(config->enableMedianFilter) 
 172:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 LCD_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:.\Generated_Source\PSoC4/LCD_UART.c **** 
 174:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_RX_FIFO_CTRL_REG = LCD_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 175:.\Generated_Source\PSoC4/LCD_UART.c **** 
 176:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure MP address */
 177:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_RX_MATCH_REG     = LCD_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 LCD_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 179:.\Generated_Source\PSoC4/LCD_UART.c **** 
 180:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure RX direction */
 181:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_TX_CTRL_REG = LCD_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 LCD_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetry
 183:.\Generated_Source\PSoC4/LCD_UART.c **** 
 184:.\Generated_Source\PSoC4/LCD_UART.c ****             if(LCD_UART_PARITY_NONE != config->parity)
 185:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 186:.\Generated_Source\PSoC4/LCD_UART.c ****                LCD_UART_TX_CTRL_REG |= LCD_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:.\Generated_Source\PSoC4/LCD_UART.c ****                                                     LCD_UART_TX_CTRL_PARITY_ENABLED;
 188:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 189:.\Generated_Source\PSoC4/LCD_UART.c **** 
 190:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_TX_CTRL_REG      = LCD_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:.\Generated_Source\PSoC4/LCD_UART.c ****                                                 LCD_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:.\Generated_Source\PSoC4/LCD_UART.c **** 
 193:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_TX_FIFO_CTRL_REG = LCD_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 194:.\Generated_Source\PSoC4/LCD_UART.c **** 
 195:.\Generated_Source\PSoC4/LCD_UART.c ****         #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 196:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_FLOW_CTRL_REG = LCD_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:.\Generated_Source\PSoC4/LCD_UART.c ****                                             LCD_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolarit
 198:.\Generated_Source\PSoC4/LCD_UART.c ****                                             LCD_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolarit
 199:.\Generated_Source\PSoC4/LCD_UART.c ****                                             LCD_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifoL
 200:.\Generated_Source\PSoC4/LCD_UART.c ****         #endif /* !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1) */
 201:.\Generated_Source\PSoC4/LCD_UART.c **** 
 202:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:.\Generated_Source\PSoC4/LCD_UART.c ****             CyIntDisable    (LCD_ISR_NUMBER);
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 5


 204:.\Generated_Source\PSoC4/LCD_UART.c ****             CyIntSetPriority(LCD_ISR_NUMBER, LCD_ISR_PRIORITY);
 205:.\Generated_Source\PSoC4/LCD_UART.c ****             (void) CyIntSetVector(LCD_ISR_NUMBER, &LCD_SPI_UART_ISR);
 206:.\Generated_Source\PSoC4/LCD_UART.c **** 
 207:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure WAKE interrupt */
 208:.\Generated_Source\PSoC4/LCD_UART.c ****         #if(LCD_UART_RX_WAKEUP_IRQ)
 209:.\Generated_Source\PSoC4/LCD_UART.c ****             CyIntDisable    (LCD_RX_WAKE_ISR_NUMBER);
 210:.\Generated_Source\PSoC4/LCD_UART.c ****             CyIntSetPriority(LCD_RX_WAKE_ISR_NUMBER, LCD_RX_WAKE_ISR_PRIORITY);
 211:.\Generated_Source\PSoC4/LCD_UART.c ****             (void) CyIntSetVector(LCD_RX_WAKE_ISR_NUMBER, &LCD_UART_WAKEUP_ISR);
 212:.\Generated_Source\PSoC4/LCD_UART.c ****         #endif /* (LCD_UART_RX_WAKEUP_IRQ) */
 213:.\Generated_Source\PSoC4/LCD_UART.c **** 
 214:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure interrupt sources */
 215:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_INTR_I2C_EC_MASK_REG = LCD_NO_INTR_SOURCES;
 216:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_INTR_SPI_EC_MASK_REG = LCD_NO_INTR_SOURCES;
 217:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_INTR_SLAVE_MASK_REG  = LCD_NO_INTR_SOURCES;
 218:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_INTR_MASTER_MASK_REG = LCD_NO_INTR_SOURCES;
 219:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:.\Generated_Source\PSoC4/LCD_UART.c ****         
 222:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_IntrTxMask = LO16(LCD_INTR_TX_MASK_REG);
 224:.\Generated_Source\PSoC4/LCD_UART.c **** 
 225:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Clear RX buffer indexes */
 226:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_rxBufferHead     = 0u;
 227:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_rxBufferTail     = 0u;
 228:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_rxBufferOverflow = 0u;
 229:.\Generated_Source\PSoC4/LCD_UART.c **** 
 230:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Clear TX buffer indexes */
 231:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_txBufferHead = 0u;
 232:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_txBufferTail = 0u;
 233:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 234:.\Generated_Source\PSoC4/LCD_UART.c ****     }
 235:.\Generated_Source\PSoC4/LCD_UART.c **** 
 236:.\Generated_Source\PSoC4/LCD_UART.c **** #else
 237:.\Generated_Source\PSoC4/LCD_UART.c **** 
 238:.\Generated_Source\PSoC4/LCD_UART.c ****     /*******************************************************************************
 239:.\Generated_Source\PSoC4/LCD_UART.c ****     * Function Name: LCD_UartInit
 240:.\Generated_Source\PSoC4/LCD_UART.c ****     ****************************************************************************//**
 241:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 242:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Configures the SCB for the UART operation.
 243:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 244:.\Generated_Source\PSoC4/LCD_UART.c ****     *******************************************************************************/
 245:.\Generated_Source\PSoC4/LCD_UART.c ****     void LCD_UartInit(void)
 246:.\Generated_Source\PSoC4/LCD_UART.c ****     {
  26              		.loc 1 246 0
  27              		.cfi_startproc
 247:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure UART interface */
 248:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_CTRL_REG = LCD_UART_DEFAULT_CTRL;
  28              		.loc 1 248 0
  29 0000 144A     		ldr	r2, .L2
  30 0002 154B     		ldr	r3, .L2+4
  31 0004 1A60     		str	r2, [r3]
 249:.\Generated_Source\PSoC4/LCD_UART.c **** 
 250:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 251:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_CTRL_REG = LCD_UART_DEFAULT_UART_CTRL;
  32              		.loc 1 251 0
  33 0006 0023     		mov	r3, #0
  34 0008 144A     		ldr	r2, .L2+8
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 6


  35 000a 1360     		str	r3, [r2]
 252:.\Generated_Source\PSoC4/LCD_UART.c **** 
 253:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure RX direction */
 254:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_RX_CTRL_REG = LCD_UART_DEFAULT_UART_RX_CTRL;
  36              		.loc 1 254 0
  37 000c 0122     		mov	r2, #1
  38 000e 1449     		ldr	r1, .L2+12
  39 0010 0A60     		str	r2, [r1]
 255:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_RX_CTRL_REG      = LCD_UART_DEFAULT_RX_CTRL;
  40              		.loc 1 255 0
  41 0012 0721     		mov	r1, #7
  42 0014 1348     		ldr	r0, .L2+16
  43 0016 0160     		str	r1, [r0]
 256:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_RX_FIFO_CTRL_REG = LCD_UART_DEFAULT_RX_FIFO_CTRL;
  44              		.loc 1 256 0
  45 0018 1348     		ldr	r0, .L2+20
  46 001a 0160     		str	r1, [r0]
 257:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_RX_MATCH_REG     = LCD_UART_DEFAULT_RX_MATCH_REG;
  47              		.loc 1 257 0
  48 001c 1349     		ldr	r1, .L2+24
  49 001e 0B60     		str	r3, [r1]
 258:.\Generated_Source\PSoC4/LCD_UART.c **** 
 259:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure TX direction */
 260:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_TX_CTRL_REG = LCD_UART_DEFAULT_UART_TX_CTRL;
  50              		.loc 1 260 0
  51 0020 1349     		ldr	r1, .L2+28
  52 0022 0A60     		str	r2, [r1]
 261:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_TX_CTRL_REG      = LCD_UART_DEFAULT_TX_CTRL;
  53              		.loc 1 261 0
  54 0024 1349     		ldr	r1, .L2+32
  55 0026 144A     		ldr	r2, .L2+36
  56 0028 1160     		str	r1, [r2]
 262:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_TX_FIFO_CTRL_REG = LCD_UART_DEFAULT_TX_FIFO_CTRL;
  57              		.loc 1 262 0
  58 002a 144A     		ldr	r2, .L2+40
  59 002c 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/LCD_UART.c **** 
 264:.\Generated_Source\PSoC4/LCD_UART.c ****     #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 265:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UART_FLOW_CTRL_REG = LCD_UART_DEFAULT_FLOW_CTRL;
  60              		.loc 1 265 0
  61 002e 0421     		mov	r1, #4
  62 0030 134A     		ldr	r2, .L2+44
  63 0032 1160     		str	r1, [r2]
 266:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1) */
 267:.\Generated_Source\PSoC4/LCD_UART.c **** 
 268:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:.\Generated_Source\PSoC4/LCD_UART.c ****     #if(LCD_SCB_IRQ_INTERNAL)
 270:.\Generated_Source\PSoC4/LCD_UART.c ****         CyIntDisable    (LCD_ISR_NUMBER);
 271:.\Generated_Source\PSoC4/LCD_UART.c ****         CyIntSetPriority(LCD_ISR_NUMBER, LCD_ISR_PRIORITY);
 272:.\Generated_Source\PSoC4/LCD_UART.c ****         (void) CyIntSetVector(LCD_ISR_NUMBER, &LCD_SPI_UART_ISR);
 273:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_SCB_IRQ_INTERNAL) */
 274:.\Generated_Source\PSoC4/LCD_UART.c **** 
 275:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure WAKE interrupt */
 276:.\Generated_Source\PSoC4/LCD_UART.c ****     #if(LCD_UART_RX_WAKEUP_IRQ)
 277:.\Generated_Source\PSoC4/LCD_UART.c ****         CyIntDisable    (LCD_RX_WAKE_ISR_NUMBER);
 278:.\Generated_Source\PSoC4/LCD_UART.c ****         CyIntSetPriority(LCD_RX_WAKE_ISR_NUMBER, LCD_RX_WAKE_ISR_PRIORITY);
 279:.\Generated_Source\PSoC4/LCD_UART.c ****         (void) CyIntSetVector(LCD_RX_WAKE_ISR_NUMBER, &LCD_UART_WAKEUP_ISR);
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 7


 280:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_UART_RX_WAKEUP_IRQ) */
 281:.\Generated_Source\PSoC4/LCD_UART.c **** 
 282:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure interrupt sources */
 283:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_INTR_I2C_EC_MASK_REG = LCD_UART_DEFAULT_INTR_I2C_EC_MASK;
  64              		.loc 1 283 0
  65 0034 134A     		ldr	r2, .L2+48
  66 0036 1360     		str	r3, [r2]
 284:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_INTR_SPI_EC_MASK_REG = LCD_UART_DEFAULT_INTR_SPI_EC_MASK;
  67              		.loc 1 284 0
  68 0038 134A     		ldr	r2, .L2+52
  69 003a 1360     		str	r3, [r2]
 285:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_INTR_SLAVE_MASK_REG  = LCD_UART_DEFAULT_INTR_SLAVE_MASK;
  70              		.loc 1 285 0
  71 003c 134A     		ldr	r2, .L2+56
  72 003e 1360     		str	r3, [r2]
 286:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_INTR_MASTER_MASK_REG = LCD_UART_DEFAULT_INTR_MASTER_MASK;
  73              		.loc 1 286 0
  74 0040 134A     		ldr	r2, .L2+60
  75 0042 1360     		str	r3, [r2]
 287:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_INTR_RX_MASK_REG     = LCD_UART_DEFAULT_INTR_RX_MASK;
  76              		.loc 1 287 0
  77 0044 134A     		ldr	r2, .L2+64
  78 0046 1360     		str	r3, [r2]
 288:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_INTR_TX_MASK_REG     = LCD_UART_DEFAULT_INTR_TX_MASK;
  79              		.loc 1 288 0
  80 0048 134A     		ldr	r2, .L2+68
  81 004a 1360     		str	r3, [r2]
 289:.\Generated_Source\PSoC4/LCD_UART.c ****     
 290:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_IntrTxMask = LO16(LCD_INTR_TX_MASK_REG);
  82              		.loc 1 291 0
  83 004c 1268     		ldr	r2, [r2]
  84 004e 134B     		ldr	r3, .L2+72
  85 0050 1A80     		strh	r2, [r3]
 292:.\Generated_Source\PSoC4/LCD_UART.c **** 
 293:.\Generated_Source\PSoC4/LCD_UART.c ****     #if(LCD_INTERNAL_RX_SW_BUFFER_CONST)
 294:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_rxBufferHead     = 0u;
 295:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_rxBufferTail     = 0u;
 296:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_rxBufferOverflow = 0u;
 297:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_INTERNAL_RX_SW_BUFFER_CONST) */
 298:.\Generated_Source\PSoC4/LCD_UART.c **** 
 299:.\Generated_Source\PSoC4/LCD_UART.c ****     #if(LCD_INTERNAL_TX_SW_BUFFER_CONST)
 300:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_txBufferHead = 0u;
 301:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_txBufferTail = 0u;
 302:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_INTERNAL_TX_SW_BUFFER_CONST) */
 303:.\Generated_Source\PSoC4/LCD_UART.c ****     }
  86              		.loc 1 303 0
  87              		@ sp needed
  88 0052 7047     		bx	lr
  89              	.L3:
  90              		.align	2
  91              	.L2:
  92 0054 0B000002 		.word	33554443
  93 0058 00002740 		.word	1076297728
  94 005c 40002740 		.word	1076297792
  95 0060 48002740 		.word	1076297800
  96 0064 00032740 		.word	1076298496
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 8


  97 0068 04032740 		.word	1076298500
  98 006c 10032740 		.word	1076298512
  99 0070 44002740 		.word	1076297796
 100 0074 07000080 		.word	-2147483641
 101 0078 00022740 		.word	1076298240
 102 007c 04022740 		.word	1076298244
 103 0080 50002740 		.word	1076297808
 104 0084 880E2740 		.word	1076301448
 105 0088 C80E2740 		.word	1076301512
 106 008c 480F2740 		.word	1076301640
 107 0090 080F2740 		.word	1076301576
 108 0094 C80F2740 		.word	1076301768
 109 0098 880F2740 		.word	1076301704
 110 009c 00000000 		.word	LCD_IntrTxMask
 111              		.cfi_endproc
 112              	.LFE1:
 113              		.size	LCD_UartInit, .-LCD_UartInit
 114              		.section	.text.LCD_UartPostEnable,"ax",%progbits
 115              		.align	2
 116              		.global	LCD_UartPostEnable
 117              		.code	16
 118              		.thumb_func
 119              		.type	LCD_UartPostEnable, %function
 120              	LCD_UartPostEnable:
 121              	.LFB2:
 304:.\Generated_Source\PSoC4/LCD_UART.c **** #endif /* (LCD_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:.\Generated_Source\PSoC4/LCD_UART.c **** 
 306:.\Generated_Source\PSoC4/LCD_UART.c **** 
 307:.\Generated_Source\PSoC4/LCD_UART.c **** /*******************************************************************************
 308:.\Generated_Source\PSoC4/LCD_UART.c **** * Function Name: LCD_UartPostEnable
 309:.\Generated_Source\PSoC4/LCD_UART.c **** ****************************************************************************//**
 310:.\Generated_Source\PSoC4/LCD_UART.c **** *
 311:.\Generated_Source\PSoC4/LCD_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:.\Generated_Source\PSoC4/LCD_UART.c **** *  controlled by the SCB UART.
 313:.\Generated_Source\PSoC4/LCD_UART.c **** *
 314:.\Generated_Source\PSoC4/LCD_UART.c **** *******************************************************************************/
 315:.\Generated_Source\PSoC4/LCD_UART.c **** void LCD_UartPostEnable(void)
 316:.\Generated_Source\PSoC4/LCD_UART.c **** {
 122              		.loc 1 316 0
 123              		.cfi_startproc
 317:.\Generated_Source\PSoC4/LCD_UART.c **** #if (LCD_SCB_MODE_UNCONFIG_CONST_CFG)
 318:.\Generated_Source\PSoC4/LCD_UART.c ****     #if (LCD_TX_SDA_MISO_PIN)
 319:.\Generated_Source\PSoC4/LCD_UART.c ****         if (LCD_CHECK_TX_SDA_MISO_PIN_USED)
 320:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 321:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Set SCB UART to drive the output pin */
 322:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_SET_HSIOM_SEL(LCD_TX_SDA_MISO_HSIOM_REG, LCD_TX_SDA_MISO_HSIOM_MASK,
 323:.\Generated_Source\PSoC4/LCD_UART.c ****                                            LCD_TX_SDA_MISO_HSIOM_POS, LCD_TX_SDA_MISO_HSIOM_SEL_UAR
 324:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 325:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_TX_SDA_MISO_PIN_PIN) */
 326:.\Generated_Source\PSoC4/LCD_UART.c **** 
 327:.\Generated_Source\PSoC4/LCD_UART.c ****     #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 328:.\Generated_Source\PSoC4/LCD_UART.c ****         #if (LCD_RTS_SS0_PIN)
 329:.\Generated_Source\PSoC4/LCD_UART.c ****             if (LCD_CHECK_RTS_SS0_PIN_USED)
 330:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 331:.\Generated_Source\PSoC4/LCD_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_SET_HSIOM_SEL(LCD_RTS_SS0_HSIOM_REG, LCD_RTS_SS0_HSIOM_MASK,
 333:.\Generated_Source\PSoC4/LCD_UART.c ****                                                LCD_RTS_SS0_HSIOM_POS, LCD_RTS_SS0_HSIOM_SEL_UART);
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 9


 334:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 335:.\Generated_Source\PSoC4/LCD_UART.c ****         #endif /* (LCD_RTS_SS0_PIN) */
 336:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1) */
 337:.\Generated_Source\PSoC4/LCD_UART.c **** 
 338:.\Generated_Source\PSoC4/LCD_UART.c **** #else
 339:.\Generated_Source\PSoC4/LCD_UART.c ****     #if (LCD_UART_TX_PIN)
 340:.\Generated_Source\PSoC4/LCD_UART.c ****          /* Set SCB UART to drive the output pin */
 341:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_SET_HSIOM_SEL(LCD_TX_HSIOM_REG, LCD_TX_HSIOM_MASK,
 124              		.loc 1 341 0
 125 0000 0549     		ldr	r1, .L5
 126 0002 0B68     		ldr	r3, [r1]
 127 0004 F022     		mov	r2, #240
 128 0006 9343     		bic	r3, r2
 129 0008 603A     		sub	r2, r2, #96
 130 000a 1343     		orr	r3, r2
 131 000c 0B60     		str	r3, [r1]
 342:.\Generated_Source\PSoC4/LCD_UART.c ****                                        LCD_TX_HSIOM_POS, LCD_TX_HSIOM_SEL_UART);
 343:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_UART_TX_PIN) */
 344:.\Generated_Source\PSoC4/LCD_UART.c **** 
 345:.\Generated_Source\PSoC4/LCD_UART.c ****     #if (LCD_UART_RTS_PIN)
 346:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Set SCB UART to drive the output pin */
 347:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_SET_HSIOM_SEL(LCD_RTS_HSIOM_REG, LCD_RTS_HSIOM_MASK,
 348:.\Generated_Source\PSoC4/LCD_UART.c ****                                        LCD_RTS_HSIOM_POS, LCD_RTS_HSIOM_SEL_UART);
 349:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_UART_RTS_PIN) */
 350:.\Generated_Source\PSoC4/LCD_UART.c **** #endif /* (LCD_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:.\Generated_Source\PSoC4/LCD_UART.c **** 
 352:.\Generated_Source\PSoC4/LCD_UART.c ****     /* Restore TX interrupt sources. */
 353:.\Generated_Source\PSoC4/LCD_UART.c ****     LCD_SetTxInterruptMode(LCD_IntrTxMask);
 132              		.loc 1 353 0
 133 000e 034B     		ldr	r3, .L5+4
 134 0010 1A88     		ldrh	r2, [r3]
 135 0012 034B     		ldr	r3, .L5+8
 136 0014 1A60     		str	r2, [r3]
 354:.\Generated_Source\PSoC4/LCD_UART.c **** }
 137              		.loc 1 354 0
 138              		@ sp needed
 139 0016 7047     		bx	lr
 140              	.L6:
 141              		.align	2
 142              	.L5:
 143 0018 00060240 		.word	1073874432
 144 001c 00000000 		.word	LCD_IntrTxMask
 145 0020 880F2740 		.word	1076301704
 146              		.cfi_endproc
 147              	.LFE2:
 148              		.size	LCD_UartPostEnable, .-LCD_UartPostEnable
 149              		.section	.text.LCD_UartStop,"ax",%progbits
 150              		.align	2
 151              		.global	LCD_UartStop
 152              		.code	16
 153              		.thumb_func
 154              		.type	LCD_UartStop, %function
 155              	LCD_UartStop:
 156              	.LFB3:
 355:.\Generated_Source\PSoC4/LCD_UART.c **** 
 356:.\Generated_Source\PSoC4/LCD_UART.c **** 
 357:.\Generated_Source\PSoC4/LCD_UART.c **** /*******************************************************************************
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 10


 358:.\Generated_Source\PSoC4/LCD_UART.c **** * Function Name: LCD_UartStop
 359:.\Generated_Source\PSoC4/LCD_UART.c **** ****************************************************************************//**
 360:.\Generated_Source\PSoC4/LCD_UART.c **** *
 361:.\Generated_Source\PSoC4/LCD_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:.\Generated_Source\PSoC4/LCD_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 363:.\Generated_Source\PSoC4/LCD_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:.\Generated_Source\PSoC4/LCD_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:.\Generated_Source\PSoC4/LCD_UART.c **** *
 366:.\Generated_Source\PSoC4/LCD_UART.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC4/LCD_UART.c **** void LCD_UartStop(void)
 368:.\Generated_Source\PSoC4/LCD_UART.c **** {
 157              		.loc 1 368 0
 158              		.cfi_startproc
 369:.\Generated_Source\PSoC4/LCD_UART.c **** #if(LCD_SCB_MODE_UNCONFIG_CONST_CFG)
 370:.\Generated_Source\PSoC4/LCD_UART.c ****     #if (LCD_TX_SDA_MISO_PIN)
 371:.\Generated_Source\PSoC4/LCD_UART.c ****         if (LCD_CHECK_TX_SDA_MISO_PIN_USED)
 372:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 373:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Set GPIO to drive output pin */
 374:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_SET_HSIOM_SEL(LCD_TX_SDA_MISO_HSIOM_REG, LCD_TX_SDA_MISO_HSIOM_MASK,
 375:.\Generated_Source\PSoC4/LCD_UART.c ****                                            LCD_TX_SDA_MISO_HSIOM_POS, LCD_TX_SDA_MISO_HSIOM_SEL_GPI
 376:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 377:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_TX_SDA_MISO_PIN_PIN) */
 378:.\Generated_Source\PSoC4/LCD_UART.c **** 
 379:.\Generated_Source\PSoC4/LCD_UART.c ****     #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 380:.\Generated_Source\PSoC4/LCD_UART.c ****         #if (LCD_RTS_SS0_PIN)
 381:.\Generated_Source\PSoC4/LCD_UART.c ****             if (LCD_CHECK_RTS_SS0_PIN_USED)
 382:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 383:.\Generated_Source\PSoC4/LCD_UART.c ****                 /* Set output pin state after block is disabled */
 384:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_uart_rts_spi_ss0_Write(LCD_GET_UART_RTS_INACTIVE);
 385:.\Generated_Source\PSoC4/LCD_UART.c **** 
 386:.\Generated_Source\PSoC4/LCD_UART.c ****                 /* Set GPIO to drive output pin */
 387:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_SET_HSIOM_SEL(LCD_RTS_SS0_HSIOM_REG, LCD_RTS_SS0_HSIOM_MASK,
 388:.\Generated_Source\PSoC4/LCD_UART.c ****                                                LCD_RTS_SS0_HSIOM_POS, LCD_RTS_SS0_HSIOM_SEL_GPIO);
 389:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 390:.\Generated_Source\PSoC4/LCD_UART.c ****         #endif /* (LCD_RTS_SS0_PIN) */
 391:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1) */
 392:.\Generated_Source\PSoC4/LCD_UART.c **** 
 393:.\Generated_Source\PSoC4/LCD_UART.c **** #else
 394:.\Generated_Source\PSoC4/LCD_UART.c ****     #if (LCD_UART_TX_PIN)
 395:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Set GPIO to drive output pin */
 396:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_SET_HSIOM_SEL(LCD_TX_HSIOM_REG, LCD_TX_HSIOM_MASK,
 159              		.loc 1 396 0
 160 0000 064A     		ldr	r2, .L8
 161 0002 1368     		ldr	r3, [r2]
 162 0004 F021     		mov	r1, #240
 163 0006 8B43     		bic	r3, r1
 164 0008 1360     		str	r3, [r2]
 397:.\Generated_Source\PSoC4/LCD_UART.c ****                                        LCD_TX_HSIOM_POS, LCD_TX_HSIOM_SEL_GPIO);
 398:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_UART_TX_PIN) */
 399:.\Generated_Source\PSoC4/LCD_UART.c **** 
 400:.\Generated_Source\PSoC4/LCD_UART.c ****     #if (LCD_UART_RTS_PIN)
 401:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Set output pin state after block is disabled */
 402:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_rts_Write(LCD_GET_UART_RTS_INACTIVE);
 403:.\Generated_Source\PSoC4/LCD_UART.c **** 
 404:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Set GPIO to drive output pin */
 405:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_SET_HSIOM_SEL(LCD_RTS_HSIOM_REG, LCD_RTS_HSIOM_MASK,
 406:.\Generated_Source\PSoC4/LCD_UART.c ****                                        LCD_RTS_HSIOM_POS, LCD_RTS_HSIOM_SEL_GPIO);
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 11


 407:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* (LCD_UART_RTS_PIN) */
 408:.\Generated_Source\PSoC4/LCD_UART.c **** 
 409:.\Generated_Source\PSoC4/LCD_UART.c **** #endif /* (LCD_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:.\Generated_Source\PSoC4/LCD_UART.c **** 
 411:.\Generated_Source\PSoC4/LCD_UART.c **** #if (LCD_UART_WAKE_ENABLE_CONST)
 412:.\Generated_Source\PSoC4/LCD_UART.c ****     /* Disable skip start feature used for wakeup */
 413:.\Generated_Source\PSoC4/LCD_UART.c ****     LCD_UART_RX_CTRL_REG &= (uint32) ~LCD_UART_RX_CTRL_SKIP_START;
 414:.\Generated_Source\PSoC4/LCD_UART.c **** #endif /* (LCD_UART_WAKE_ENABLE_CONST) */
 415:.\Generated_Source\PSoC4/LCD_UART.c **** 
 416:.\Generated_Source\PSoC4/LCD_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:.\Generated_Source\PSoC4/LCD_UART.c ****     LCD_IntrTxMask = LO16(LCD_GetTxInterruptMode() & LCD_INTR_UART_TX_RESTORE);
 165              		.loc 1 417 0
 166 000a 054B     		ldr	r3, .L8+4
 167 000c 1A68     		ldr	r2, [r3]
 168 000e E423     		mov	r3, #228
 169 0010 DB00     		lsl	r3, r3, #3
 170 0012 1340     		and	r3, r2
 171 0014 034A     		ldr	r2, .L8+8
 172 0016 1380     		strh	r3, [r2]
 418:.\Generated_Source\PSoC4/LCD_UART.c **** }
 173              		.loc 1 418 0
 174              		@ sp needed
 175 0018 7047     		bx	lr
 176              	.L9:
 177 001a C046     		.align	2
 178              	.L8:
 179 001c 00060240 		.word	1073874432
 180 0020 880F2740 		.word	1076301704
 181 0024 00000000 		.word	LCD_IntrTxMask
 182              		.cfi_endproc
 183              	.LFE3:
 184              		.size	LCD_UartStop, .-LCD_UartStop
 185              		.section	.text.LCD_UartSetRxAddress,"ax",%progbits
 186              		.align	2
 187              		.global	LCD_UartSetRxAddress
 188              		.code	16
 189              		.thumb_func
 190              		.type	LCD_UartSetRxAddress, %function
 191              	LCD_UartSetRxAddress:
 192              	.LFB4:
 419:.\Generated_Source\PSoC4/LCD_UART.c **** 
 420:.\Generated_Source\PSoC4/LCD_UART.c **** 
 421:.\Generated_Source\PSoC4/LCD_UART.c **** /*******************************************************************************
 422:.\Generated_Source\PSoC4/LCD_UART.c **** * Function Name: LCD_UartSetRxAddress
 423:.\Generated_Source\PSoC4/LCD_UART.c **** ****************************************************************************//**
 424:.\Generated_Source\PSoC4/LCD_UART.c **** *
 425:.\Generated_Source\PSoC4/LCD_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:.\Generated_Source\PSoC4/LCD_UART.c **** *  Multiprocessor mode.
 427:.\Generated_Source\PSoC4/LCD_UART.c **** *
 428:.\Generated_Source\PSoC4/LCD_UART.c **** *  \param address: Address for hardware address detection.
 429:.\Generated_Source\PSoC4/LCD_UART.c **** *
 430:.\Generated_Source\PSoC4/LCD_UART.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC4/LCD_UART.c **** void LCD_UartSetRxAddress(uint32 address)
 432:.\Generated_Source\PSoC4/LCD_UART.c **** {
 193              		.loc 1 432 0
 194              		.cfi_startproc
 195              	.LVL0:
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 12


 433:.\Generated_Source\PSoC4/LCD_UART.c ****      uint32 matchReg;
 434:.\Generated_Source\PSoC4/LCD_UART.c **** 
 435:.\Generated_Source\PSoC4/LCD_UART.c ****     matchReg = LCD_RX_MATCH_REG;
 196              		.loc 1 435 0
 197 0000 034A     		ldr	r2, .L11
 198 0002 1368     		ldr	r3, [r2]
 199              	.LVL1:
 436:.\Generated_Source\PSoC4/LCD_UART.c **** 
 437:.\Generated_Source\PSoC4/LCD_UART.c ****     matchReg &= ((uint32) ~LCD_RX_MATCH_ADDR_MASK); /* Clear address bits */
 200              		.loc 1 437 0
 201 0004 FF21     		mov	r1, #255
 202 0006 8B43     		bic	r3, r1
 203              	.LVL2:
 438:.\Generated_Source\PSoC4/LCD_UART.c ****     matchReg |= ((uint32)  (address & LCD_RX_MATCH_ADDR_MASK)); /* Set address  */
 204              		.loc 1 438 0
 205 0008 0840     		and	r0, r1
 206              	.LVL3:
 207 000a 1843     		orr	r0, r3
 208              	.LVL4:
 439:.\Generated_Source\PSoC4/LCD_UART.c **** 
 440:.\Generated_Source\PSoC4/LCD_UART.c ****     LCD_RX_MATCH_REG = matchReg;
 209              		.loc 1 440 0
 210 000c 1060     		str	r0, [r2]
 441:.\Generated_Source\PSoC4/LCD_UART.c **** }
 211              		.loc 1 441 0
 212              		@ sp needed
 213 000e 7047     		bx	lr
 214              	.L12:
 215              		.align	2
 216              	.L11:
 217 0010 10032740 		.word	1076298512
 218              		.cfi_endproc
 219              	.LFE4:
 220              		.size	LCD_UartSetRxAddress, .-LCD_UartSetRxAddress
 221              		.section	.text.LCD_UartSetRxAddressMask,"ax",%progbits
 222              		.align	2
 223              		.global	LCD_UartSetRxAddressMask
 224              		.code	16
 225              		.thumb_func
 226              		.type	LCD_UartSetRxAddressMask, %function
 227              	LCD_UartSetRxAddressMask:
 228              	.LFB5:
 442:.\Generated_Source\PSoC4/LCD_UART.c **** 
 443:.\Generated_Source\PSoC4/LCD_UART.c **** 
 444:.\Generated_Source\PSoC4/LCD_UART.c **** /*******************************************************************************
 445:.\Generated_Source\PSoC4/LCD_UART.c **** * Function Name: LCD_UartSetRxAddressMask
 446:.\Generated_Source\PSoC4/LCD_UART.c **** ****************************************************************************//**
 447:.\Generated_Source\PSoC4/LCD_UART.c **** *
 448:.\Generated_Source\PSoC4/LCD_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:.\Generated_Source\PSoC4/LCD_UART.c **** *
 450:.\Generated_Source\PSoC4/LCD_UART.c **** *  \param addressMask: Address mask.
 451:.\Generated_Source\PSoC4/LCD_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:.\Generated_Source\PSoC4/LCD_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:.\Generated_Source\PSoC4/LCD_UART.c **** *     of the address.
 454:.\Generated_Source\PSoC4/LCD_UART.c **** *
 455:.\Generated_Source\PSoC4/LCD_UART.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC4/LCD_UART.c **** void LCD_UartSetRxAddressMask(uint32 addressMask)
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 13


 457:.\Generated_Source\PSoC4/LCD_UART.c **** {
 229              		.loc 1 457 0
 230              		.cfi_startproc
 231              	.LVL5:
 458:.\Generated_Source\PSoC4/LCD_UART.c ****     uint32 matchReg;
 459:.\Generated_Source\PSoC4/LCD_UART.c **** 
 460:.\Generated_Source\PSoC4/LCD_UART.c ****     matchReg = LCD_RX_MATCH_REG;
 232              		.loc 1 460 0
 233 0000 034A     		ldr	r2, .L14
 234 0002 1168     		ldr	r1, [r2]
 235              	.LVL6:
 461:.\Generated_Source\PSoC4/LCD_UART.c **** 
 462:.\Generated_Source\PSoC4/LCD_UART.c ****     matchReg &= ((uint32) ~LCD_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 236              		.loc 1 462 0
 237 0004 034B     		ldr	r3, .L14+4
 238 0006 0B40     		and	r3, r1
 239              	.LVL7:
 463:.\Generated_Source\PSoC4/LCD_UART.c ****     matchReg |= ((uint32) (addressMask << LCD_RX_MATCH_MASK_POS));
 240              		.loc 1 463 0
 241 0008 0004     		lsl	r0, r0, #16
 242              	.LVL8:
 243 000a 1843     		orr	r0, r3
 244              	.LVL9:
 464:.\Generated_Source\PSoC4/LCD_UART.c **** 
 465:.\Generated_Source\PSoC4/LCD_UART.c ****     LCD_RX_MATCH_REG = matchReg;
 245              		.loc 1 465 0
 246 000c 1060     		str	r0, [r2]
 466:.\Generated_Source\PSoC4/LCD_UART.c **** }
 247              		.loc 1 466 0
 248              		@ sp needed
 249 000e 7047     		bx	lr
 250              	.L15:
 251              		.align	2
 252              	.L14:
 253 0010 10032740 		.word	1076298512
 254 0014 FFFF00FF 		.word	-16711681
 255              		.cfi_endproc
 256              	.LFE5:
 257              		.size	LCD_UartSetRxAddressMask, .-LCD_UartSetRxAddressMask
 258              		.section	.text.LCD_UartPutString,"ax",%progbits
 259              		.align	2
 260              		.global	LCD_UartPutString
 261              		.code	16
 262              		.thumb_func
 263              		.type	LCD_UartPutString, %function
 264              	LCD_UartPutString:
 265              	.LFB6:
 467:.\Generated_Source\PSoC4/LCD_UART.c **** 
 468:.\Generated_Source\PSoC4/LCD_UART.c **** 
 469:.\Generated_Source\PSoC4/LCD_UART.c **** #if(LCD_UART_RX_DIRECTION)
 470:.\Generated_Source\PSoC4/LCD_UART.c ****     /*******************************************************************************
 471:.\Generated_Source\PSoC4/LCD_UART.c ****     * Function Name: LCD_UartGetChar
 472:.\Generated_Source\PSoC4/LCD_UART.c ****     ****************************************************************************//**
 473:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 474:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Retrieves next data element from receive buffer.
 475:.\Generated_Source\PSoC4/LCD_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:.\Generated_Source\PSoC4/LCD_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 14


 477:.\Generated_Source\PSoC4/LCD_UART.c ****     *  is present.
 478:.\Generated_Source\PSoC4/LCD_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:.\Generated_Source\PSoC4/LCD_UART.c ****     *    FIFO.
 480:.\Generated_Source\PSoC4/LCD_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:.\Generated_Source\PSoC4/LCD_UART.c ****     *    receive buffer.
 482:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 483:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \return
 484:.\Generated_Source\PSoC4/LCD_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:.\Generated_Source\PSoC4/LCD_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:.\Generated_Source\PSoC4/LCD_UART.c ****     *   data available.
 487:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 488:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \sideeffect
 489:.\Generated_Source\PSoC4/LCD_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:.\Generated_Source\PSoC4/LCD_UART.c ****     *   RX FIFO and software buffer usage.
 491:.\Generated_Source\PSoC4/LCD_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:.\Generated_Source\PSoC4/LCD_UART.c ****     *   is not treated as an error condition.
 493:.\Generated_Source\PSoC4/LCD_UART.c ****     *   Check LCD_rxBufferOverflow to capture that error condition.
 494:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 495:.\Generated_Source\PSoC4/LCD_UART.c ****     *******************************************************************************/
 496:.\Generated_Source\PSoC4/LCD_UART.c ****     uint32 LCD_UartGetChar(void)
 497:.\Generated_Source\PSoC4/LCD_UART.c ****     {
 498:.\Generated_Source\PSoC4/LCD_UART.c ****         uint32 rxData = 0u;
 499:.\Generated_Source\PSoC4/LCD_UART.c **** 
 500:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Reads data only if there is data to read */
 501:.\Generated_Source\PSoC4/LCD_UART.c ****         if (0u != LCD_SpiUartGetRxBufferSize())
 502:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 503:.\Generated_Source\PSoC4/LCD_UART.c ****             rxData = LCD_SpiUartReadRxData();
 504:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 505:.\Generated_Source\PSoC4/LCD_UART.c **** 
 506:.\Generated_Source\PSoC4/LCD_UART.c ****         if (LCD_CHECK_INTR_RX(LCD_INTR_RX_ERR))
 507:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 508:.\Generated_Source\PSoC4/LCD_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_ClearRxInterruptSource(LCD_INTR_RX_ERR);
 510:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 511:.\Generated_Source\PSoC4/LCD_UART.c **** 
 512:.\Generated_Source\PSoC4/LCD_UART.c ****         return (rxData);
 513:.\Generated_Source\PSoC4/LCD_UART.c ****     }
 514:.\Generated_Source\PSoC4/LCD_UART.c **** 
 515:.\Generated_Source\PSoC4/LCD_UART.c **** 
 516:.\Generated_Source\PSoC4/LCD_UART.c ****     /*******************************************************************************
 517:.\Generated_Source\PSoC4/LCD_UART.c ****     * Function Name: LCD_UartGetByte
 518:.\Generated_Source\PSoC4/LCD_UART.c ****     ****************************************************************************//**
 519:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 520:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:.\Generated_Source\PSoC4/LCD_UART.c ****     *  received byte and error condition.
 522:.\Generated_Source\PSoC4/LCD_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:.\Generated_Source\PSoC4/LCD_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:.\Generated_Source\PSoC4/LCD_UART.c ****     *     empty.
 525:.\Generated_Source\PSoC4/LCD_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:.\Generated_Source\PSoC4/LCD_UART.c ****     *     software receive buffer.
 527:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 528:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \return
 529:.\Generated_Source\PSoC4/LCD_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 530:.\Generated_Source\PSoC4/LCD_UART.c ****     *   other bits contain the error condition.
 531:.\Generated_Source\PSoC4/LCD_UART.c ****     *   - LCD_UART_RX_OVERFLOW - Attempt to write to a full
 532:.\Generated_Source\PSoC4/LCD_UART.c ****     *     receiver FIFO.
 533:.\Generated_Source\PSoC4/LCD_UART.c ****     *   - LCD_UART_RX_UNDERFLOW	Attempt to read from an empty
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 15


 534:.\Generated_Source\PSoC4/LCD_UART.c ****     *     receiver FIFO.
 535:.\Generated_Source\PSoC4/LCD_UART.c ****     *   - LCD_UART_RX_FRAME_ERROR - UART framing error detected.
 536:.\Generated_Source\PSoC4/LCD_UART.c ****     *   - LCD_UART_RX_PARITY_ERROR - UART parity error detected.
 537:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 538:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \sideeffect
 539:.\Generated_Source\PSoC4/LCD_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:.\Generated_Source\PSoC4/LCD_UART.c ****     *   RX FIFO and software buffer usage.
 541:.\Generated_Source\PSoC4/LCD_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:.\Generated_Source\PSoC4/LCD_UART.c ****     *   is not treated as an error condition.
 543:.\Generated_Source\PSoC4/LCD_UART.c ****     *   Check LCD_rxBufferOverflow to capture that error condition.
 544:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 545:.\Generated_Source\PSoC4/LCD_UART.c ****     *******************************************************************************/
 546:.\Generated_Source\PSoC4/LCD_UART.c ****     uint32 LCD_UartGetByte(void)
 547:.\Generated_Source\PSoC4/LCD_UART.c ****     {
 548:.\Generated_Source\PSoC4/LCD_UART.c ****         uint32 rxData;
 549:.\Generated_Source\PSoC4/LCD_UART.c ****         uint32 tmpStatus;
 550:.\Generated_Source\PSoC4/LCD_UART.c **** 
 551:.\Generated_Source\PSoC4/LCD_UART.c ****         #if (LCD_CHECK_RX_SW_BUFFER)
 552:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 553:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_DisableInt();
 554:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 555:.\Generated_Source\PSoC4/LCD_UART.c ****         #endif
 556:.\Generated_Source\PSoC4/LCD_UART.c **** 
 557:.\Generated_Source\PSoC4/LCD_UART.c ****         if (0u != LCD_SpiUartGetRxBufferSize())
 558:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 559:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:.\Generated_Source\PSoC4/LCD_UART.c ****             * buffer.
 561:.\Generated_Source\PSoC4/LCD_UART.c ****             */
 562:.\Generated_Source\PSoC4/LCD_UART.c ****             #if (LCD_CHECK_RX_SW_BUFFER)
 563:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 564:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_EnableInt();
 565:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 566:.\Generated_Source\PSoC4/LCD_UART.c ****             #endif
 567:.\Generated_Source\PSoC4/LCD_UART.c **** 
 568:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Get received byte */
 569:.\Generated_Source\PSoC4/LCD_UART.c ****             rxData = LCD_SpiUartReadRxData();
 570:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 571:.\Generated_Source\PSoC4/LCD_UART.c ****         else
 572:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 573:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:.\Generated_Source\PSoC4/LCD_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:.\Generated_Source\PSoC4/LCD_UART.c ****             */
 576:.\Generated_Source\PSoC4/LCD_UART.c ****             rxData = LCD_RX_FIFO_RD_REG;
 577:.\Generated_Source\PSoC4/LCD_UART.c **** 
 578:.\Generated_Source\PSoC4/LCD_UART.c **** 
 579:.\Generated_Source\PSoC4/LCD_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:.\Generated_Source\PSoC4/LCD_UART.c ****             #if (LCD_CHECK_RX_SW_BUFFER)
 581:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 582:.\Generated_Source\PSoC4/LCD_UART.c **** 
 583:.\Generated_Source\PSoC4/LCD_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:.\Generated_Source\PSoC4/LCD_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:.\Generated_Source\PSoC4/LCD_UART.c ****                 */
 586:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_ClearRxInterruptSource(LCD_INTR_RX_NOT_EMPTY);
 587:.\Generated_Source\PSoC4/LCD_UART.c **** 
 588:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_EnableInt();
 589:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 590:.\Generated_Source\PSoC4/LCD_UART.c ****             #endif
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 16


 591:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 592:.\Generated_Source\PSoC4/LCD_UART.c **** 
 593:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Get and clear RX error mask */
 594:.\Generated_Source\PSoC4/LCD_UART.c ****         tmpStatus = (LCD_GetRxInterruptSource() & LCD_INTR_RX_ERR);
 595:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_ClearRxInterruptSource(LCD_INTR_RX_ERR);
 596:.\Generated_Source\PSoC4/LCD_UART.c **** 
 597:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Puts together data and error status:
 598:.\Generated_Source\PSoC4/LCD_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:.\Generated_Source\PSoC4/LCD_UART.c ****         */
 600:.\Generated_Source\PSoC4/LCD_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 601:.\Generated_Source\PSoC4/LCD_UART.c **** 
 602:.\Generated_Source\PSoC4/LCD_UART.c ****         return (rxData);
 603:.\Generated_Source\PSoC4/LCD_UART.c ****     }
 604:.\Generated_Source\PSoC4/LCD_UART.c **** 
 605:.\Generated_Source\PSoC4/LCD_UART.c **** 
 606:.\Generated_Source\PSoC4/LCD_UART.c ****     #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 607:.\Generated_Source\PSoC4/LCD_UART.c ****         /*******************************************************************************
 608:.\Generated_Source\PSoC4/LCD_UART.c ****         * Function Name: LCD_UartSetRtsPolarity
 609:.\Generated_Source\PSoC4/LCD_UART.c ****         ****************************************************************************//**
 610:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 611:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Sets active polarity of RTS output signal.
 612:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:.\Generated_Source\PSoC4/LCD_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 615:.\Generated_Source\PSoC4/LCD_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:.\Generated_Source\PSoC4/LCD_UART.c ****         *   - LCD_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:.\Generated_Source\PSoC4/LCD_UART.c ****         *   - LCD_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 619:.\Generated_Source\PSoC4/LCD_UART.c ****         *******************************************************************************/
 620:.\Generated_Source\PSoC4/LCD_UART.c ****         void LCD_UartSetRtsPolarity(uint32 polarity)
 621:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 622:.\Generated_Source\PSoC4/LCD_UART.c ****             if(0u != polarity)
 623:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 624:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_UART_FLOW_CTRL_REG |= (uint32)  LCD_UART_FLOW_CTRL_RTS_POLARITY;
 625:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 626:.\Generated_Source\PSoC4/LCD_UART.c ****             else
 627:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 628:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_UART_FLOW_CTRL_REG &= (uint32) ~LCD_UART_FLOW_CTRL_RTS_POLARITY;
 629:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 630:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 631:.\Generated_Source\PSoC4/LCD_UART.c **** 
 632:.\Generated_Source\PSoC4/LCD_UART.c **** 
 633:.\Generated_Source\PSoC4/LCD_UART.c ****         /*******************************************************************************
 634:.\Generated_Source\PSoC4/LCD_UART.c ****         * Function Name: LCD_UartSetRtsFifoLevel
 635:.\Generated_Source\PSoC4/LCD_UART.c ****         ****************************************************************************//**
 636:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 637:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:.\Generated_Source\PSoC4/LCD_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:.\Generated_Source\PSoC4/LCD_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:.\Generated_Source\PSoC4/LCD_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 643:.\Generated_Source\PSoC4/LCD_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:.\Generated_Source\PSoC4/LCD_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:.\Generated_Source\PSoC4/LCD_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 646:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 647:.\Generated_Source\PSoC4/LCD_UART.c ****         *******************************************************************************/
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 17


 648:.\Generated_Source\PSoC4/LCD_UART.c ****         void LCD_UartSetRtsFifoLevel(uint32 level)
 649:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 650:.\Generated_Source\PSoC4/LCD_UART.c ****             uint32 uartFlowCtrl;
 651:.\Generated_Source\PSoC4/LCD_UART.c **** 
 652:.\Generated_Source\PSoC4/LCD_UART.c ****             uartFlowCtrl = LCD_UART_FLOW_CTRL_REG;
 653:.\Generated_Source\PSoC4/LCD_UART.c **** 
 654:.\Generated_Source\PSoC4/LCD_UART.c ****             uartFlowCtrl &= ((uint32) ~LCD_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask 
 655:.\Generated_Source\PSoC4/LCD_UART.c ****             uartFlowCtrl |= ((uint32) (LCD_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:.\Generated_Source\PSoC4/LCD_UART.c **** 
 657:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 659:.\Generated_Source\PSoC4/LCD_UART.c ****     #endif /* !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1) */
 660:.\Generated_Source\PSoC4/LCD_UART.c **** 
 661:.\Generated_Source\PSoC4/LCD_UART.c **** #endif /* (LCD_UART_RX_DIRECTION) */
 662:.\Generated_Source\PSoC4/LCD_UART.c **** 
 663:.\Generated_Source\PSoC4/LCD_UART.c **** 
 664:.\Generated_Source\PSoC4/LCD_UART.c **** #if(LCD_UART_TX_DIRECTION)
 665:.\Generated_Source\PSoC4/LCD_UART.c ****     /*******************************************************************************
 666:.\Generated_Source\PSoC4/LCD_UART.c ****     * Function Name: LCD_UartPutString
 667:.\Generated_Source\PSoC4/LCD_UART.c ****     ****************************************************************************//**
 668:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 669:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:.\Generated_Source\PSoC4/LCD_UART.c ****     *  next available bus time.
 671:.\Generated_Source\PSoC4/LCD_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:.\Generated_Source\PSoC4/LCD_UART.c ****     *  requested data in transmit buffer.
 673:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 674:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:.\Generated_Source\PSoC4/LCD_UART.c ****     *   transmit buffer.
 676:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 677:.\Generated_Source\PSoC4/LCD_UART.c ****     *******************************************************************************/
 678:.\Generated_Source\PSoC4/LCD_UART.c ****     void LCD_UartPutString(const char8 string[])
 679:.\Generated_Source\PSoC4/LCD_UART.c ****     {
 266              		.loc 1 679 0
 267              		.cfi_startproc
 268              	.LVL10:
 269 0000 38B5     		push	{r3, r4, r5, lr}
 270              		.cfi_def_cfa_offset 16
 271              		.cfi_offset 3, -16
 272              		.cfi_offset 4, -12
 273              		.cfi_offset 5, -8
 274              		.cfi_offset 14, -4
 275 0002 051C     		mov	r5, r0
 276              	.LVL11:
 680:.\Generated_Source\PSoC4/LCD_UART.c ****         uint32 bufIndex;
 681:.\Generated_Source\PSoC4/LCD_UART.c **** 
 682:.\Generated_Source\PSoC4/LCD_UART.c ****         bufIndex = 0u;
 277              		.loc 1 682 0
 278 0004 0024     		mov	r4, #0
 683:.\Generated_Source\PSoC4/LCD_UART.c **** 
 684:.\Generated_Source\PSoC4/LCD_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:.\Generated_Source\PSoC4/LCD_UART.c ****         while(string[bufIndex] != ((char8) 0))
 279              		.loc 1 685 0
 280 0006 02E0     		b	.L17
 281              	.LVL12:
 282              	.L18:
 686:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 687:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UartPutChar((uint32) string[bufIndex]);
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 18


 283              		.loc 1 687 0
 284 0008 FFF7FEFF 		bl	LCD_SpiUartWriteTxData
 285              	.LVL13:
 688:.\Generated_Source\PSoC4/LCD_UART.c ****             bufIndex++;
 286              		.loc 1 688 0
 287 000c 0134     		add	r4, r4, #1
 288              	.LVL14:
 289              	.L17:
 685:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 290              		.loc 1 685 0
 291 000e 285D     		ldrb	r0, [r5, r4]
 292 0010 0028     		cmp	r0, #0
 293 0012 F9D1     		bne	.L18
 689:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 690:.\Generated_Source\PSoC4/LCD_UART.c ****     }
 294              		.loc 1 690 0
 295              		@ sp needed
 296              	.LVL15:
 297              	.LVL16:
 298 0014 38BD     		pop	{r3, r4, r5, pc}
 299              		.cfi_endproc
 300              	.LFE6:
 301              		.size	LCD_UartPutString, .-LCD_UartPutString
 302 0016 C046     		.section	.text.LCD_UartPutCRLF,"ax",%progbits
 303              		.align	2
 304              		.global	LCD_UartPutCRLF
 305              		.code	16
 306              		.thumb_func
 307              		.type	LCD_UartPutCRLF, %function
 308              	LCD_UartPutCRLF:
 309              	.LFB7:
 691:.\Generated_Source\PSoC4/LCD_UART.c **** 
 692:.\Generated_Source\PSoC4/LCD_UART.c **** 
 693:.\Generated_Source\PSoC4/LCD_UART.c ****     /*******************************************************************************
 694:.\Generated_Source\PSoC4/LCD_UART.c ****     * Function Name: LCD_UartPutCRLF
 695:.\Generated_Source\PSoC4/LCD_UART.c ****     ****************************************************************************//**
 696:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 697:.\Generated_Source\PSoC4/LCD_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:.\Generated_Source\PSoC4/LCD_UART.c ****     *  (0x0A) in the transmit buffer.
 699:.\Generated_Source\PSoC4/LCD_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:.\Generated_Source\PSoC4/LCD_UART.c ****     *  all requested data in transmit buffer.
 701:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 702:.\Generated_Source\PSoC4/LCD_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:.\Generated_Source\PSoC4/LCD_UART.c ****     *
 704:.\Generated_Source\PSoC4/LCD_UART.c ****     *******************************************************************************/
 705:.\Generated_Source\PSoC4/LCD_UART.c ****     void LCD_UartPutCRLF(uint32 txDataByte)
 706:.\Generated_Source\PSoC4/LCD_UART.c ****     {
 310              		.loc 1 706 0
 311              		.cfi_startproc
 312              	.LVL17:
 313 0000 08B5     		push	{r3, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 707:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 317              		.loc 1 707 0
 318 0002 FFF7FEFF 		bl	LCD_SpiUartWriteTxData
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 19


 319              	.LVL18:
 708:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 320              		.loc 1 708 0
 321 0006 0D20     		mov	r0, #13
 322 0008 FFF7FEFF 		bl	LCD_SpiUartWriteTxData
 323              	.LVL19:
 709:.\Generated_Source\PSoC4/LCD_UART.c ****         LCD_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 324              		.loc 1 709 0
 325 000c 0A20     		mov	r0, #10
 326 000e FFF7FEFF 		bl	LCD_SpiUartWriteTxData
 327              	.LVL20:
 710:.\Generated_Source\PSoC4/LCD_UART.c ****     }
 328              		.loc 1 710 0
 329              		@ sp needed
 330 0012 08BD     		pop	{r3, pc}
 331              		.cfi_endproc
 332              	.LFE7:
 333              		.size	LCD_UartPutCRLF, .-LCD_UartPutCRLF
 334              		.section	.text.LCD_UartEnableCts,"ax",%progbits
 335              		.align	2
 336              		.global	LCD_UartEnableCts
 337              		.code	16
 338              		.thumb_func
 339              		.type	LCD_UartEnableCts, %function
 340              	LCD_UartEnableCts:
 341              	.LFB8:
 711:.\Generated_Source\PSoC4/LCD_UART.c **** 
 712:.\Generated_Source\PSoC4/LCD_UART.c **** 
 713:.\Generated_Source\PSoC4/LCD_UART.c ****     #if !(LCD_CY_SCBIP_V0 || LCD_CY_SCBIP_V1)
 714:.\Generated_Source\PSoC4/LCD_UART.c ****         /*******************************************************************************
 715:.\Generated_Source\PSoC4/LCD_UART.c ****         * Function Name: LCDSCB_UartEnableCts
 716:.\Generated_Source\PSoC4/LCD_UART.c ****         ****************************************************************************//**
 717:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 718:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 719:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 720:.\Generated_Source\PSoC4/LCD_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 721:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 722:.\Generated_Source\PSoC4/LCD_UART.c ****         *******************************************************************************/
 723:.\Generated_Source\PSoC4/LCD_UART.c ****         void LCD_UartEnableCts(void)
 724:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 342              		.loc 1 724 0
 343              		.cfi_startproc
 725:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_FLOW_CTRL_REG |= (uint32)  LCD_UART_FLOW_CTRL_CTS_ENABLE;
 344              		.loc 1 725 0
 345 0000 034A     		ldr	r2, .L21
 346 0002 1368     		ldr	r3, [r2]
 347 0004 8021     		mov	r1, #128
 348 0006 8904     		lsl	r1, r1, #18
 349 0008 0B43     		orr	r3, r1
 350 000a 1360     		str	r3, [r2]
 726:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 351              		.loc 1 726 0
 352              		@ sp needed
 353 000c 7047     		bx	lr
 354              	.L22:
 355 000e C046     		.align	2
 356              	.L21:
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 20


 357 0010 50002740 		.word	1076297808
 358              		.cfi_endproc
 359              	.LFE8:
 360              		.size	LCD_UartEnableCts, .-LCD_UartEnableCts
 361              		.section	.text.LCD_UartDisableCts,"ax",%progbits
 362              		.align	2
 363              		.global	LCD_UartDisableCts
 364              		.code	16
 365              		.thumb_func
 366              		.type	LCD_UartDisableCts, %function
 367              	LCD_UartDisableCts:
 368              	.LFB9:
 727:.\Generated_Source\PSoC4/LCD_UART.c **** 
 728:.\Generated_Source\PSoC4/LCD_UART.c **** 
 729:.\Generated_Source\PSoC4/LCD_UART.c ****         /*******************************************************************************
 730:.\Generated_Source\PSoC4/LCD_UART.c ****         * Function Name: LCD_UartDisableCts
 731:.\Generated_Source\PSoC4/LCD_UART.c ****         ****************************************************************************//**
 732:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 733:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 734:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 735:.\Generated_Source\PSoC4/LCD_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 736:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 737:.\Generated_Source\PSoC4/LCD_UART.c ****         *******************************************************************************/
 738:.\Generated_Source\PSoC4/LCD_UART.c ****         void LCD_UartDisableCts(void)
 739:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 369              		.loc 1 739 0
 370              		.cfi_startproc
 740:.\Generated_Source\PSoC4/LCD_UART.c ****             LCD_UART_FLOW_CTRL_REG &= (uint32) ~LCD_UART_FLOW_CTRL_CTS_ENABLE;
 371              		.loc 1 740 0
 372 0000 024A     		ldr	r2, .L24
 373 0002 1168     		ldr	r1, [r2]
 374 0004 024B     		ldr	r3, .L24+4
 375 0006 0B40     		and	r3, r1
 376 0008 1360     		str	r3, [r2]
 741:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 377              		.loc 1 741 0
 378              		@ sp needed
 379 000a 7047     		bx	lr
 380              	.L25:
 381              		.align	2
 382              	.L24:
 383 000c 50002740 		.word	1076297808
 384 0010 FFFFFFFD 		.word	-33554433
 385              		.cfi_endproc
 386              	.LFE9:
 387              		.size	LCD_UartDisableCts, .-LCD_UartDisableCts
 388              		.section	.text.LCD_UartSetCtsPolarity,"ax",%progbits
 389              		.align	2
 390              		.global	LCD_UartSetCtsPolarity
 391              		.code	16
 392              		.thumb_func
 393              		.type	LCD_UartSetCtsPolarity, %function
 394              	LCD_UartSetCtsPolarity:
 395              	.LFB10:
 742:.\Generated_Source\PSoC4/LCD_UART.c **** 
 743:.\Generated_Source\PSoC4/LCD_UART.c **** 
 744:.\Generated_Source\PSoC4/LCD_UART.c ****         /*******************************************************************************
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 21


 745:.\Generated_Source\PSoC4/LCD_UART.c ****         * Function Name: LCD_UartSetCtsPolarity
 746:.\Generated_Source\PSoC4/LCD_UART.c ****         ****************************************************************************//**
 747:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 748:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Sets active polarity of CTS input signal.
 749:.\Generated_Source\PSoC4/LCD_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 750:.\Generated_Source\PSoC4/LCD_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 751:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 752:.\Generated_Source\PSoC4/LCD_UART.c ****         *  \param polarity: Active polarity of CTS output signal.
 753:.\Generated_Source\PSoC4/LCD_UART.c ****         *   - LCD_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 754:.\Generated_Source\PSoC4/LCD_UART.c ****         *   - LCD_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 755:.\Generated_Source\PSoC4/LCD_UART.c ****         *
 756:.\Generated_Source\PSoC4/LCD_UART.c ****         *******************************************************************************/
 757:.\Generated_Source\PSoC4/LCD_UART.c ****         void LCD_UartSetCtsPolarity(uint32 polarity)
 758:.\Generated_Source\PSoC4/LCD_UART.c ****         {
 396              		.loc 1 758 0
 397              		.cfi_startproc
 398              	.LVL21:
 759:.\Generated_Source\PSoC4/LCD_UART.c ****             if (0u != polarity)
 399              		.loc 1 759 0
 400 0000 0028     		cmp	r0, #0
 401 0002 06D0     		beq	.L27
 760:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 761:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_UART_FLOW_CTRL_REG |= (uint32)  LCD_UART_FLOW_CTRL_CTS_POLARITY;
 402              		.loc 1 761 0
 403 0004 064A     		ldr	r2, .L29
 404 0006 1368     		ldr	r3, [r2]
 405 0008 8021     		mov	r1, #128
 406 000a 4904     		lsl	r1, r1, #17
 407 000c 0B43     		orr	r3, r1
 408 000e 1360     		str	r3, [r2]
 409 0010 04E0     		b	.L26
 410              	.L27:
 762:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 763:.\Generated_Source\PSoC4/LCD_UART.c ****             else
 764:.\Generated_Source\PSoC4/LCD_UART.c ****             {
 765:.\Generated_Source\PSoC4/LCD_UART.c ****                 LCD_UART_FLOW_CTRL_REG &= (uint32) ~LCD_UART_FLOW_CTRL_CTS_POLARITY;
 411              		.loc 1 765 0
 412 0012 034A     		ldr	r2, .L29
 413 0014 1168     		ldr	r1, [r2]
 414 0016 034B     		ldr	r3, .L29+4
 415 0018 0B40     		and	r3, r1
 416 001a 1360     		str	r3, [r2]
 417              	.L26:
 766:.\Generated_Source\PSoC4/LCD_UART.c ****             }
 767:.\Generated_Source\PSoC4/LCD_UART.c ****         }
 418              		.loc 1 767 0
 419              		@ sp needed
 420 001c 7047     		bx	lr
 421              	.L30:
 422 001e C046     		.align	2
 423              	.L29:
 424 0020 50002740 		.word	1076297808
 425 0024 FFFFFFFE 		.word	-16777217
 426              		.cfi_endproc
 427              	.LFE10:
 428              		.size	LCD_UartSetCtsPolarity, .-LCD_UartSetCtsPolarity
 429              		.text
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 22


 430              	.Letext0:
 431              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 432              		.file 3 ".\\Generated_Source\\PSoC4\\LCD_PVT.h"
 433              		.file 4 ".\\Generated_Source\\PSoC4\\LCD_SPI_UART.h"
 434              		.section	.debug_info,"",%progbits
 435              	.Ldebug_info0:
 436 0000 67020000 		.4byte	0x267
 437 0004 0400     		.2byte	0x4
 438 0006 00000000 		.4byte	.Ldebug_abbrev0
 439 000a 04       		.byte	0x4
 440 000b 01       		.uleb128 0x1
 441 000c DD010000 		.4byte	.LASF34
 442 0010 01       		.byte	0x1
 443 0011 05010000 		.4byte	.LASF35
 444 0015 96000000 		.4byte	.LASF36
 445 0019 00000000 		.4byte	.Ldebug_ranges0+0
 446 001d 00000000 		.4byte	0
 447 0021 00000000 		.4byte	.Ldebug_line0
 448 0025 02       		.uleb128 0x2
 449 0026 01       		.byte	0x1
 450 0027 06       		.byte	0x6
 451 0028 96020000 		.4byte	.LASF0
 452 002c 02       		.uleb128 0x2
 453 002d 01       		.byte	0x1
 454 002e 08       		.byte	0x8
 455 002f 88000000 		.4byte	.LASF1
 456 0033 02       		.uleb128 0x2
 457 0034 02       		.byte	0x2
 458 0035 05       		.byte	0x5
 459 0036 6B020000 		.4byte	.LASF2
 460 003a 02       		.uleb128 0x2
 461 003b 02       		.byte	0x2
 462 003c 07       		.byte	0x7
 463 003d E6000000 		.4byte	.LASF3
 464 0041 02       		.uleb128 0x2
 465 0042 04       		.byte	0x4
 466 0043 05       		.byte	0x5
 467 0044 84020000 		.4byte	.LASF4
 468 0048 02       		.uleb128 0x2
 469 0049 04       		.byte	0x4
 470 004a 07       		.byte	0x7
 471 004b D4000000 		.4byte	.LASF5
 472 004f 02       		.uleb128 0x2
 473 0050 08       		.byte	0x8
 474 0051 05       		.byte	0x5
 475 0052 7A000000 		.4byte	.LASF6
 476 0056 02       		.uleb128 0x2
 477 0057 08       		.byte	0x8
 478 0058 07       		.byte	0x7
 479 0059 6E010000 		.4byte	.LASF7
 480 005d 03       		.uleb128 0x3
 481 005e 04       		.byte	0x4
 482 005f 05       		.byte	0x5
 483 0060 696E7400 		.ascii	"int\000"
 484 0064 02       		.uleb128 0x2
 485 0065 04       		.byte	0x4
 486 0066 07       		.byte	0x7
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 23


 487 0067 59010000 		.4byte	.LASF8
 488 006b 04       		.uleb128 0x4
 489 006c 39010000 		.4byte	.LASF9
 490 0070 02       		.byte	0x2
 491 0071 3901     		.2byte	0x139
 492 0073 3A000000 		.4byte	0x3a
 493 0077 04       		.uleb128 0x4
 494 0078 52010000 		.4byte	.LASF10
 495 007c 02       		.byte	0x2
 496 007d 3A01     		.2byte	0x13a
 497 007f 48000000 		.4byte	0x48
 498 0083 02       		.uleb128 0x2
 499 0084 04       		.byte	0x4
 500 0085 04       		.byte	0x4
 501 0086 74000000 		.4byte	.LASF11
 502 008a 02       		.uleb128 0x2
 503 008b 08       		.byte	0x8
 504 008c 04       		.byte	0x4
 505 008d 29010000 		.4byte	.LASF12
 506 0091 04       		.uleb128 0x4
 507 0092 C7010000 		.4byte	.LASF13
 508 0096 02       		.byte	0x2
 509 0097 4901     		.2byte	0x149
 510 0099 9D000000 		.4byte	0x9d
 511 009d 02       		.uleb128 0x2
 512 009e 01       		.byte	0x1
 513 009f 08       		.byte	0x8
 514 00a0 D8010000 		.4byte	.LASF14
 515 00a4 04       		.uleb128 0x4
 516 00a5 15000000 		.4byte	.LASF15
 517 00a9 02       		.byte	0x2
 518 00aa E401     		.2byte	0x1e4
 519 00ac B0000000 		.4byte	0xb0
 520 00b0 05       		.uleb128 0x5
 521 00b1 77000000 		.4byte	0x77
 522 00b5 02       		.uleb128 0x2
 523 00b6 04       		.byte	0x4
 524 00b7 07       		.byte	0x7
 525 00b8 BE010000 		.4byte	.LASF16
 526 00bc 06       		.uleb128 0x6
 527 00bd 5A000000 		.4byte	.LASF17
 528 00c1 01       		.byte	0x1
 529 00c2 F5       		.byte	0xf5
 530 00c3 00000000 		.4byte	.LFB1
 531 00c7 A0000000 		.4byte	.LFE1-.LFB1
 532 00cb 01       		.uleb128 0x1
 533 00cc 9C       		.byte	0x9c
 534 00cd 07       		.uleb128 0x7
 535 00ce 2D000000 		.4byte	.LASF18
 536 00d2 01       		.byte	0x1
 537 00d3 3B01     		.2byte	0x13b
 538 00d5 00000000 		.4byte	.LFB2
 539 00d9 24000000 		.4byte	.LFE2-.LFB2
 540 00dd 01       		.uleb128 0x1
 541 00de 9C       		.byte	0x9c
 542 00df 07       		.uleb128 0x7
 543 00e0 67000000 		.4byte	.LASF19
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 24


 544 00e4 01       		.byte	0x1
 545 00e5 6F01     		.2byte	0x16f
 546 00e7 00000000 		.4byte	.LFB3
 547 00eb 28000000 		.4byte	.LFE3-.LFB3
 548 00ef 01       		.uleb128 0x1
 549 00f0 9C       		.byte	0x9c
 550 00f1 08       		.uleb128 0x8
 551 00f2 00000000 		.4byte	.LASF20
 552 00f6 01       		.byte	0x1
 553 00f7 AF01     		.2byte	0x1af
 554 00f9 00000000 		.4byte	.LFB4
 555 00fd 14000000 		.4byte	.LFE4-.LFB4
 556 0101 01       		.uleb128 0x1
 557 0102 9C       		.byte	0x9c
 558 0103 28010000 		.4byte	0x128
 559 0107 09       		.uleb128 0x9
 560 0108 66010000 		.4byte	.LASF22
 561 010c 01       		.byte	0x1
 562 010d AF01     		.2byte	0x1af
 563 010f 77000000 		.4byte	0x77
 564 0113 00000000 		.4byte	.LLST0
 565 0117 0A       		.uleb128 0xa
 566 0118 8D020000 		.4byte	.LASF24
 567 011c 01       		.byte	0x1
 568 011d B101     		.2byte	0x1b1
 569 011f 77000000 		.4byte	0x77
 570 0123 21000000 		.4byte	.LLST1
 571 0127 00       		.byte	0
 572 0128 08       		.uleb128 0x8
 573 0129 85010000 		.4byte	.LASF21
 574 012d 01       		.byte	0x1
 575 012e C801     		.2byte	0x1c8
 576 0130 00000000 		.4byte	.LFB5
 577 0134 18000000 		.4byte	.LFE5-.LFB5
 578 0138 01       		.uleb128 0x1
 579 0139 9C       		.byte	0x9c
 580 013a 5F010000 		.4byte	0x15f
 581 013e 09       		.uleb128 0x9
 582 013f F9000000 		.4byte	.LASF23
 583 0143 01       		.byte	0x1
 584 0144 C801     		.2byte	0x1c8
 585 0146 77000000 		.4byte	0x77
 586 014a 3F000000 		.4byte	.LLST2
 587 014e 0A       		.uleb128 0xa
 588 014f 8D020000 		.4byte	.LASF24
 589 0153 01       		.byte	0x1
 590 0154 CA01     		.2byte	0x1ca
 591 0156 77000000 		.4byte	0x77
 592 015a 60000000 		.4byte	.LLST3
 593 015e 00       		.byte	0
 594 015f 08       		.uleb128 0x8
 595 0160 1B000000 		.4byte	.LASF25
 596 0164 01       		.byte	0x1
 597 0165 A602     		.2byte	0x2a6
 598 0167 00000000 		.4byte	.LFB6
 599 016b 16000000 		.4byte	.LFE6-.LFB6
 600 016f 01       		.uleb128 0x1
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 25


 601 0170 9C       		.byte	0x9c
 602 0171 9F010000 		.4byte	0x19f
 603 0175 09       		.uleb128 0x9
 604 0176 53000000 		.4byte	.LASF26
 605 017a 01       		.byte	0x1
 606 017b A602     		.2byte	0x2a6
 607 017d 9F010000 		.4byte	0x19f
 608 0181 89000000 		.4byte	.LLST4
 609 0185 0A       		.uleb128 0xa
 610 0186 B5010000 		.4byte	.LASF27
 611 018a 01       		.byte	0x1
 612 018b A802     		.2byte	0x2a8
 613 018d 77000000 		.4byte	0x77
 614 0191 B5000000 		.4byte	.LLST5
 615 0195 0B       		.uleb128 0xb
 616 0196 0C000000 		.4byte	.LVL13
 617 019a 5C020000 		.4byte	0x25c
 618 019e 00       		.byte	0
 619 019f 0C       		.uleb128 0xc
 620 01a0 04       		.byte	0x4
 621 01a1 A5010000 		.4byte	0x1a5
 622 01a5 0D       		.uleb128 0xd
 623 01a6 91000000 		.4byte	0x91
 624 01aa 08       		.uleb128 0x8
 625 01ab B9020000 		.4byte	.LASF28
 626 01af 01       		.byte	0x1
 627 01b0 C102     		.2byte	0x2c1
 628 01b2 00000000 		.4byte	.LFB7
 629 01b6 14000000 		.4byte	.LFE7-.LFB7
 630 01ba 01       		.uleb128 0x1
 631 01bb 9C       		.byte	0x9c
 632 01bc 08020000 		.4byte	0x208
 633 01c0 09       		.uleb128 0x9
 634 01c1 CD010000 		.4byte	.LASF29
 635 01c5 01       		.byte	0x1
 636 01c6 C102     		.2byte	0x2c1
 637 01c8 77000000 		.4byte	0x77
 638 01cc D4000000 		.4byte	.LLST6
 639 01d0 0E       		.uleb128 0xe
 640 01d1 06000000 		.4byte	.LVL18
 641 01d5 5C020000 		.4byte	0x25c
 642 01d9 E5010000 		.4byte	0x1e5
 643 01dd 0F       		.uleb128 0xf
 644 01de 01       		.uleb128 0x1
 645 01df 50       		.byte	0x50
 646 01e0 03       		.uleb128 0x3
 647 01e1 F3       		.byte	0xf3
 648 01e2 01       		.uleb128 0x1
 649 01e3 50       		.byte	0x50
 650 01e4 00       		.byte	0
 651 01e5 0E       		.uleb128 0xe
 652 01e6 0C000000 		.4byte	.LVL19
 653 01ea 5C020000 		.4byte	0x25c
 654 01ee F8010000 		.4byte	0x1f8
 655 01f2 0F       		.uleb128 0xf
 656 01f3 01       		.uleb128 0x1
 657 01f4 50       		.byte	0x50
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 26


 658 01f5 01       		.uleb128 0x1
 659 01f6 3D       		.byte	0x3d
 660 01f7 00       		.byte	0
 661 01f8 10       		.uleb128 0x10
 662 01f9 12000000 		.4byte	.LVL20
 663 01fd 5C020000 		.4byte	0x25c
 664 0201 0F       		.uleb128 0xf
 665 0202 01       		.uleb128 0x1
 666 0203 50       		.byte	0x50
 667 0204 01       		.uleb128 0x1
 668 0205 3A       		.byte	0x3a
 669 0206 00       		.byte	0
 670 0207 00       		.byte	0
 671 0208 07       		.uleb128 0x7
 672 0209 40010000 		.4byte	.LASF30
 673 020d 01       		.byte	0x1
 674 020e D302     		.2byte	0x2d3
 675 0210 00000000 		.4byte	.LFB8
 676 0214 14000000 		.4byte	.LFE8-.LFB8
 677 0218 01       		.uleb128 0x1
 678 0219 9C       		.byte	0x9c
 679 021a 07       		.uleb128 0x7
 680 021b 40000000 		.4byte	.LASF31
 681 021f 01       		.byte	0x1
 682 0220 E202     		.2byte	0x2e2
 683 0222 00000000 		.4byte	.LFB9
 684 0226 14000000 		.4byte	.LFE9-.LFB9
 685 022a 01       		.uleb128 0x1
 686 022b 9C       		.byte	0x9c
 687 022c 08       		.uleb128 0x8
 688 022d 9E010000 		.4byte	.LASF32
 689 0231 01       		.byte	0x1
 690 0232 F502     		.2byte	0x2f5
 691 0234 00000000 		.4byte	.LFB10
 692 0238 28000000 		.4byte	.LFE10-.LFB10
 693 023c 01       		.uleb128 0x1
 694 023d 9C       		.byte	0x9c
 695 023e 51020000 		.4byte	0x251
 696 0242 11       		.uleb128 0x11
 697 0243 30010000 		.4byte	.LASF33
 698 0247 01       		.byte	0x1
 699 0248 F502     		.2byte	0x2f5
 700 024a 77000000 		.4byte	0x77
 701 024e 01       		.uleb128 0x1
 702 024f 50       		.byte	0x50
 703 0250 00       		.byte	0
 704 0251 12       		.uleb128 0x12
 705 0252 75020000 		.4byte	.LASF37
 706 0256 03       		.byte	0x3
 707 0257 5B       		.byte	0x5b
 708 0258 6B000000 		.4byte	0x6b
 709 025c 13       		.uleb128 0x13
 710 025d A2020000 		.4byte	.LASF38
 711 0261 04       		.byte	0x4
 712 0262 3A03     		.2byte	0x33a
 713 0264 14       		.uleb128 0x14
 714 0265 77000000 		.4byte	0x77
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 27


 715 0269 00       		.byte	0
 716 026a 00       		.byte	0
 717              		.section	.debug_abbrev,"",%progbits
 718              	.Ldebug_abbrev0:
 719 0000 01       		.uleb128 0x1
 720 0001 11       		.uleb128 0x11
 721 0002 01       		.byte	0x1
 722 0003 25       		.uleb128 0x25
 723 0004 0E       		.uleb128 0xe
 724 0005 13       		.uleb128 0x13
 725 0006 0B       		.uleb128 0xb
 726 0007 03       		.uleb128 0x3
 727 0008 0E       		.uleb128 0xe
 728 0009 1B       		.uleb128 0x1b
 729 000a 0E       		.uleb128 0xe
 730 000b 55       		.uleb128 0x55
 731 000c 17       		.uleb128 0x17
 732 000d 11       		.uleb128 0x11
 733 000e 01       		.uleb128 0x1
 734 000f 10       		.uleb128 0x10
 735 0010 17       		.uleb128 0x17
 736 0011 00       		.byte	0
 737 0012 00       		.byte	0
 738 0013 02       		.uleb128 0x2
 739 0014 24       		.uleb128 0x24
 740 0015 00       		.byte	0
 741 0016 0B       		.uleb128 0xb
 742 0017 0B       		.uleb128 0xb
 743 0018 3E       		.uleb128 0x3e
 744 0019 0B       		.uleb128 0xb
 745 001a 03       		.uleb128 0x3
 746 001b 0E       		.uleb128 0xe
 747 001c 00       		.byte	0
 748 001d 00       		.byte	0
 749 001e 03       		.uleb128 0x3
 750 001f 24       		.uleb128 0x24
 751 0020 00       		.byte	0
 752 0021 0B       		.uleb128 0xb
 753 0022 0B       		.uleb128 0xb
 754 0023 3E       		.uleb128 0x3e
 755 0024 0B       		.uleb128 0xb
 756 0025 03       		.uleb128 0x3
 757 0026 08       		.uleb128 0x8
 758 0027 00       		.byte	0
 759 0028 00       		.byte	0
 760 0029 04       		.uleb128 0x4
 761 002a 16       		.uleb128 0x16
 762 002b 00       		.byte	0
 763 002c 03       		.uleb128 0x3
 764 002d 0E       		.uleb128 0xe
 765 002e 3A       		.uleb128 0x3a
 766 002f 0B       		.uleb128 0xb
 767 0030 3B       		.uleb128 0x3b
 768 0031 05       		.uleb128 0x5
 769 0032 49       		.uleb128 0x49
 770 0033 13       		.uleb128 0x13
 771 0034 00       		.byte	0
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 28


 772 0035 00       		.byte	0
 773 0036 05       		.uleb128 0x5
 774 0037 35       		.uleb128 0x35
 775 0038 00       		.byte	0
 776 0039 49       		.uleb128 0x49
 777 003a 13       		.uleb128 0x13
 778 003b 00       		.byte	0
 779 003c 00       		.byte	0
 780 003d 06       		.uleb128 0x6
 781 003e 2E       		.uleb128 0x2e
 782 003f 00       		.byte	0
 783 0040 3F       		.uleb128 0x3f
 784 0041 19       		.uleb128 0x19
 785 0042 03       		.uleb128 0x3
 786 0043 0E       		.uleb128 0xe
 787 0044 3A       		.uleb128 0x3a
 788 0045 0B       		.uleb128 0xb
 789 0046 3B       		.uleb128 0x3b
 790 0047 0B       		.uleb128 0xb
 791 0048 27       		.uleb128 0x27
 792 0049 19       		.uleb128 0x19
 793 004a 11       		.uleb128 0x11
 794 004b 01       		.uleb128 0x1
 795 004c 12       		.uleb128 0x12
 796 004d 06       		.uleb128 0x6
 797 004e 40       		.uleb128 0x40
 798 004f 18       		.uleb128 0x18
 799 0050 9742     		.uleb128 0x2117
 800 0052 19       		.uleb128 0x19
 801 0053 00       		.byte	0
 802 0054 00       		.byte	0
 803 0055 07       		.uleb128 0x7
 804 0056 2E       		.uleb128 0x2e
 805 0057 00       		.byte	0
 806 0058 3F       		.uleb128 0x3f
 807 0059 19       		.uleb128 0x19
 808 005a 03       		.uleb128 0x3
 809 005b 0E       		.uleb128 0xe
 810 005c 3A       		.uleb128 0x3a
 811 005d 0B       		.uleb128 0xb
 812 005e 3B       		.uleb128 0x3b
 813 005f 05       		.uleb128 0x5
 814 0060 27       		.uleb128 0x27
 815 0061 19       		.uleb128 0x19
 816 0062 11       		.uleb128 0x11
 817 0063 01       		.uleb128 0x1
 818 0064 12       		.uleb128 0x12
 819 0065 06       		.uleb128 0x6
 820 0066 40       		.uleb128 0x40
 821 0067 18       		.uleb128 0x18
 822 0068 9742     		.uleb128 0x2117
 823 006a 19       		.uleb128 0x19
 824 006b 00       		.byte	0
 825 006c 00       		.byte	0
 826 006d 08       		.uleb128 0x8
 827 006e 2E       		.uleb128 0x2e
 828 006f 01       		.byte	0x1
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 29


 829 0070 3F       		.uleb128 0x3f
 830 0071 19       		.uleb128 0x19
 831 0072 03       		.uleb128 0x3
 832 0073 0E       		.uleb128 0xe
 833 0074 3A       		.uleb128 0x3a
 834 0075 0B       		.uleb128 0xb
 835 0076 3B       		.uleb128 0x3b
 836 0077 05       		.uleb128 0x5
 837 0078 27       		.uleb128 0x27
 838 0079 19       		.uleb128 0x19
 839 007a 11       		.uleb128 0x11
 840 007b 01       		.uleb128 0x1
 841 007c 12       		.uleb128 0x12
 842 007d 06       		.uleb128 0x6
 843 007e 40       		.uleb128 0x40
 844 007f 18       		.uleb128 0x18
 845 0080 9742     		.uleb128 0x2117
 846 0082 19       		.uleb128 0x19
 847 0083 01       		.uleb128 0x1
 848 0084 13       		.uleb128 0x13
 849 0085 00       		.byte	0
 850 0086 00       		.byte	0
 851 0087 09       		.uleb128 0x9
 852 0088 05       		.uleb128 0x5
 853 0089 00       		.byte	0
 854 008a 03       		.uleb128 0x3
 855 008b 0E       		.uleb128 0xe
 856 008c 3A       		.uleb128 0x3a
 857 008d 0B       		.uleb128 0xb
 858 008e 3B       		.uleb128 0x3b
 859 008f 05       		.uleb128 0x5
 860 0090 49       		.uleb128 0x49
 861 0091 13       		.uleb128 0x13
 862 0092 02       		.uleb128 0x2
 863 0093 17       		.uleb128 0x17
 864 0094 00       		.byte	0
 865 0095 00       		.byte	0
 866 0096 0A       		.uleb128 0xa
 867 0097 34       		.uleb128 0x34
 868 0098 00       		.byte	0
 869 0099 03       		.uleb128 0x3
 870 009a 0E       		.uleb128 0xe
 871 009b 3A       		.uleb128 0x3a
 872 009c 0B       		.uleb128 0xb
 873 009d 3B       		.uleb128 0x3b
 874 009e 05       		.uleb128 0x5
 875 009f 49       		.uleb128 0x49
 876 00a0 13       		.uleb128 0x13
 877 00a1 02       		.uleb128 0x2
 878 00a2 17       		.uleb128 0x17
 879 00a3 00       		.byte	0
 880 00a4 00       		.byte	0
 881 00a5 0B       		.uleb128 0xb
 882 00a6 898201   		.uleb128 0x4109
 883 00a9 00       		.byte	0
 884 00aa 11       		.uleb128 0x11
 885 00ab 01       		.uleb128 0x1
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 30


 886 00ac 31       		.uleb128 0x31
 887 00ad 13       		.uleb128 0x13
 888 00ae 00       		.byte	0
 889 00af 00       		.byte	0
 890 00b0 0C       		.uleb128 0xc
 891 00b1 0F       		.uleb128 0xf
 892 00b2 00       		.byte	0
 893 00b3 0B       		.uleb128 0xb
 894 00b4 0B       		.uleb128 0xb
 895 00b5 49       		.uleb128 0x49
 896 00b6 13       		.uleb128 0x13
 897 00b7 00       		.byte	0
 898 00b8 00       		.byte	0
 899 00b9 0D       		.uleb128 0xd
 900 00ba 26       		.uleb128 0x26
 901 00bb 00       		.byte	0
 902 00bc 49       		.uleb128 0x49
 903 00bd 13       		.uleb128 0x13
 904 00be 00       		.byte	0
 905 00bf 00       		.byte	0
 906 00c0 0E       		.uleb128 0xe
 907 00c1 898201   		.uleb128 0x4109
 908 00c4 01       		.byte	0x1
 909 00c5 11       		.uleb128 0x11
 910 00c6 01       		.uleb128 0x1
 911 00c7 31       		.uleb128 0x31
 912 00c8 13       		.uleb128 0x13
 913 00c9 01       		.uleb128 0x1
 914 00ca 13       		.uleb128 0x13
 915 00cb 00       		.byte	0
 916 00cc 00       		.byte	0
 917 00cd 0F       		.uleb128 0xf
 918 00ce 8A8201   		.uleb128 0x410a
 919 00d1 00       		.byte	0
 920 00d2 02       		.uleb128 0x2
 921 00d3 18       		.uleb128 0x18
 922 00d4 9142     		.uleb128 0x2111
 923 00d6 18       		.uleb128 0x18
 924 00d7 00       		.byte	0
 925 00d8 00       		.byte	0
 926 00d9 10       		.uleb128 0x10
 927 00da 898201   		.uleb128 0x4109
 928 00dd 01       		.byte	0x1
 929 00de 11       		.uleb128 0x11
 930 00df 01       		.uleb128 0x1
 931 00e0 31       		.uleb128 0x31
 932 00e1 13       		.uleb128 0x13
 933 00e2 00       		.byte	0
 934 00e3 00       		.byte	0
 935 00e4 11       		.uleb128 0x11
 936 00e5 05       		.uleb128 0x5
 937 00e6 00       		.byte	0
 938 00e7 03       		.uleb128 0x3
 939 00e8 0E       		.uleb128 0xe
 940 00e9 3A       		.uleb128 0x3a
 941 00ea 0B       		.uleb128 0xb
 942 00eb 3B       		.uleb128 0x3b
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 31


 943 00ec 05       		.uleb128 0x5
 944 00ed 49       		.uleb128 0x49
 945 00ee 13       		.uleb128 0x13
 946 00ef 02       		.uleb128 0x2
 947 00f0 18       		.uleb128 0x18
 948 00f1 00       		.byte	0
 949 00f2 00       		.byte	0
 950 00f3 12       		.uleb128 0x12
 951 00f4 34       		.uleb128 0x34
 952 00f5 00       		.byte	0
 953 00f6 03       		.uleb128 0x3
 954 00f7 0E       		.uleb128 0xe
 955 00f8 3A       		.uleb128 0x3a
 956 00f9 0B       		.uleb128 0xb
 957 00fa 3B       		.uleb128 0x3b
 958 00fb 0B       		.uleb128 0xb
 959 00fc 49       		.uleb128 0x49
 960 00fd 13       		.uleb128 0x13
 961 00fe 3F       		.uleb128 0x3f
 962 00ff 19       		.uleb128 0x19
 963 0100 3C       		.uleb128 0x3c
 964 0101 19       		.uleb128 0x19
 965 0102 00       		.byte	0
 966 0103 00       		.byte	0
 967 0104 13       		.uleb128 0x13
 968 0105 2E       		.uleb128 0x2e
 969 0106 01       		.byte	0x1
 970 0107 3F       		.uleb128 0x3f
 971 0108 19       		.uleb128 0x19
 972 0109 03       		.uleb128 0x3
 973 010a 0E       		.uleb128 0xe
 974 010b 3A       		.uleb128 0x3a
 975 010c 0B       		.uleb128 0xb
 976 010d 3B       		.uleb128 0x3b
 977 010e 05       		.uleb128 0x5
 978 010f 27       		.uleb128 0x27
 979 0110 19       		.uleb128 0x19
 980 0111 3C       		.uleb128 0x3c
 981 0112 19       		.uleb128 0x19
 982 0113 00       		.byte	0
 983 0114 00       		.byte	0
 984 0115 14       		.uleb128 0x14
 985 0116 05       		.uleb128 0x5
 986 0117 00       		.byte	0
 987 0118 49       		.uleb128 0x49
 988 0119 13       		.uleb128 0x13
 989 011a 00       		.byte	0
 990 011b 00       		.byte	0
 991 011c 00       		.byte	0
 992              		.section	.debug_loc,"",%progbits
 993              	.Ldebug_loc0:
 994              	.LLST0:
 995 0000 00000000 		.4byte	.LVL0
 996 0004 0A000000 		.4byte	.LVL3
 997 0008 0100     		.2byte	0x1
 998 000a 50       		.byte	0x50
 999 000b 0A000000 		.4byte	.LVL3
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 32


 1000 000f 14000000 		.4byte	.LFE4
 1001 0013 0400     		.2byte	0x4
 1002 0015 F3       		.byte	0xf3
 1003 0016 01       		.uleb128 0x1
 1004 0017 50       		.byte	0x50
 1005 0018 9F       		.byte	0x9f
 1006 0019 00000000 		.4byte	0
 1007 001d 00000000 		.4byte	0
 1008              	.LLST1:
 1009 0021 04000000 		.4byte	.LVL1
 1010 0025 0C000000 		.4byte	.LVL4
 1011 0029 0100     		.2byte	0x1
 1012 002b 53       		.byte	0x53
 1013 002c 0C000000 		.4byte	.LVL4
 1014 0030 14000000 		.4byte	.LFE4
 1015 0034 0100     		.2byte	0x1
 1016 0036 50       		.byte	0x50
 1017 0037 00000000 		.4byte	0
 1018 003b 00000000 		.4byte	0
 1019              	.LLST2:
 1020 003f 00000000 		.4byte	.LVL5
 1021 0043 0A000000 		.4byte	.LVL8
 1022 0047 0100     		.2byte	0x1
 1023 0049 50       		.byte	0x50
 1024 004a 0A000000 		.4byte	.LVL8
 1025 004e 18000000 		.4byte	.LFE5
 1026 0052 0400     		.2byte	0x4
 1027 0054 F3       		.byte	0xf3
 1028 0055 01       		.uleb128 0x1
 1029 0056 50       		.byte	0x50
 1030 0057 9F       		.byte	0x9f
 1031 0058 00000000 		.4byte	0
 1032 005c 00000000 		.4byte	0
 1033              	.LLST3:
 1034 0060 04000000 		.4byte	.LVL6
 1035 0064 08000000 		.4byte	.LVL7
 1036 0068 0100     		.2byte	0x1
 1037 006a 51       		.byte	0x51
 1038 006b 08000000 		.4byte	.LVL7
 1039 006f 0C000000 		.4byte	.LVL9
 1040 0073 0100     		.2byte	0x1
 1041 0075 53       		.byte	0x53
 1042 0076 0C000000 		.4byte	.LVL9
 1043 007a 18000000 		.4byte	.LFE5
 1044 007e 0100     		.2byte	0x1
 1045 0080 50       		.byte	0x50
 1046 0081 00000000 		.4byte	0
 1047 0085 00000000 		.4byte	0
 1048              	.LLST4:
 1049 0089 00000000 		.4byte	.LVL10
 1050 008d 08000000 		.4byte	.LVL12
 1051 0091 0100     		.2byte	0x1
 1052 0093 50       		.byte	0x50
 1053 0094 08000000 		.4byte	.LVL12
 1054 0098 14000000 		.4byte	.LVL16
 1055 009c 0100     		.2byte	0x1
 1056 009e 55       		.byte	0x55
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 33


 1057 009f 14000000 		.4byte	.LVL16
 1058 00a3 16000000 		.4byte	.LFE6
 1059 00a7 0400     		.2byte	0x4
 1060 00a9 F3       		.byte	0xf3
 1061 00aa 01       		.uleb128 0x1
 1062 00ab 50       		.byte	0x50
 1063 00ac 9F       		.byte	0x9f
 1064 00ad 00000000 		.4byte	0
 1065 00b1 00000000 		.4byte	0
 1066              	.LLST5:
 1067 00b5 04000000 		.4byte	.LVL11
 1068 00b9 08000000 		.4byte	.LVL12
 1069 00bd 0200     		.2byte	0x2
 1070 00bf 30       		.byte	0x30
 1071 00c0 9F       		.byte	0x9f
 1072 00c1 08000000 		.4byte	.LVL12
 1073 00c5 14000000 		.4byte	.LVL15
 1074 00c9 0100     		.2byte	0x1
 1075 00cb 54       		.byte	0x54
 1076 00cc 00000000 		.4byte	0
 1077 00d0 00000000 		.4byte	0
 1078              	.LLST6:
 1079 00d4 00000000 		.4byte	.LVL17
 1080 00d8 05000000 		.4byte	.LVL18-1
 1081 00dc 0100     		.2byte	0x1
 1082 00de 50       		.byte	0x50
 1083 00df 05000000 		.4byte	.LVL18-1
 1084 00e3 14000000 		.4byte	.LFE7
 1085 00e7 0400     		.2byte	0x4
 1086 00e9 F3       		.byte	0xf3
 1087 00ea 01       		.uleb128 0x1
 1088 00eb 50       		.byte	0x50
 1089 00ec 9F       		.byte	0x9f
 1090 00ed 00000000 		.4byte	0
 1091 00f1 00000000 		.4byte	0
 1092              		.section	.debug_aranges,"",%progbits
 1093 0000 64000000 		.4byte	0x64
 1094 0004 0200     		.2byte	0x2
 1095 0006 00000000 		.4byte	.Ldebug_info0
 1096 000a 04       		.byte	0x4
 1097 000b 00       		.byte	0
 1098 000c 0000     		.2byte	0
 1099 000e 0000     		.2byte	0
 1100 0010 00000000 		.4byte	.LFB1
 1101 0014 A0000000 		.4byte	.LFE1-.LFB1
 1102 0018 00000000 		.4byte	.LFB2
 1103 001c 24000000 		.4byte	.LFE2-.LFB2
 1104 0020 00000000 		.4byte	.LFB3
 1105 0024 28000000 		.4byte	.LFE3-.LFB3
 1106 0028 00000000 		.4byte	.LFB4
 1107 002c 14000000 		.4byte	.LFE4-.LFB4
 1108 0030 00000000 		.4byte	.LFB5
 1109 0034 18000000 		.4byte	.LFE5-.LFB5
 1110 0038 00000000 		.4byte	.LFB6
 1111 003c 16000000 		.4byte	.LFE6-.LFB6
 1112 0040 00000000 		.4byte	.LFB7
 1113 0044 14000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 34


 1114 0048 00000000 		.4byte	.LFB8
 1115 004c 14000000 		.4byte	.LFE8-.LFB8
 1116 0050 00000000 		.4byte	.LFB9
 1117 0054 14000000 		.4byte	.LFE9-.LFB9
 1118 0058 00000000 		.4byte	.LFB10
 1119 005c 28000000 		.4byte	.LFE10-.LFB10
 1120 0060 00000000 		.4byte	0
 1121 0064 00000000 		.4byte	0
 1122              		.section	.debug_ranges,"",%progbits
 1123              	.Ldebug_ranges0:
 1124 0000 00000000 		.4byte	.LFB1
 1125 0004 A0000000 		.4byte	.LFE1
 1126 0008 00000000 		.4byte	.LFB2
 1127 000c 24000000 		.4byte	.LFE2
 1128 0010 00000000 		.4byte	.LFB3
 1129 0014 28000000 		.4byte	.LFE3
 1130 0018 00000000 		.4byte	.LFB4
 1131 001c 14000000 		.4byte	.LFE4
 1132 0020 00000000 		.4byte	.LFB5
 1133 0024 18000000 		.4byte	.LFE5
 1134 0028 00000000 		.4byte	.LFB6
 1135 002c 16000000 		.4byte	.LFE6
 1136 0030 00000000 		.4byte	.LFB7
 1137 0034 14000000 		.4byte	.LFE7
 1138 0038 00000000 		.4byte	.LFB8
 1139 003c 14000000 		.4byte	.LFE8
 1140 0040 00000000 		.4byte	.LFB9
 1141 0044 14000000 		.4byte	.LFE9
 1142 0048 00000000 		.4byte	.LFB10
 1143 004c 28000000 		.4byte	.LFE10
 1144 0050 00000000 		.4byte	0
 1145 0054 00000000 		.4byte	0
 1146              		.section	.debug_line,"",%progbits
 1147              	.Ldebug_line0:
 1148 0000 63010000 		.section	.debug_str,"MS",%progbits,1
 1148      02007D00 
 1148      00000201 
 1148      FB0E0D00 
 1148      01010101 
 1149              	.LASF20:
 1150 0000 4C43445F 		.ascii	"LCD_UartSetRxAddress\000"
 1150      55617274 
 1150      53657452 
 1150      78416464 
 1150      72657373 
 1151              	.LASF15:
 1152 0015 72656733 		.ascii	"reg32\000"
 1152      3200
 1153              	.LASF25:
 1154 001b 4C43445F 		.ascii	"LCD_UartPutString\000"
 1154      55617274 
 1154      50757453 
 1154      7472696E 
 1154      6700
 1155              	.LASF18:
 1156 002d 4C43445F 		.ascii	"LCD_UartPostEnable\000"
 1156      55617274 
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 35


 1156      506F7374 
 1156      456E6162 
 1156      6C6500
 1157              	.LASF31:
 1158 0040 4C43445F 		.ascii	"LCD_UartDisableCts\000"
 1158      55617274 
 1158      44697361 
 1158      626C6543 
 1158      747300
 1159              	.LASF26:
 1160 0053 73747269 		.ascii	"string\000"
 1160      6E6700
 1161              	.LASF17:
 1162 005a 4C43445F 		.ascii	"LCD_UartInit\000"
 1162      55617274 
 1162      496E6974 
 1162      00
 1163              	.LASF19:
 1164 0067 4C43445F 		.ascii	"LCD_UartStop\000"
 1164      55617274 
 1164      53746F70 
 1164      00
 1165              	.LASF11:
 1166 0074 666C6F61 		.ascii	"float\000"
 1166      7400
 1167              	.LASF6:
 1168 007a 6C6F6E67 		.ascii	"long long int\000"
 1168      206C6F6E 
 1168      6720696E 
 1168      7400
 1169              	.LASF1:
 1170 0088 756E7369 		.ascii	"unsigned char\000"
 1170      676E6564 
 1170      20636861 
 1170      7200
 1171              	.LASF36:
 1172 0096 443A5C55 		.ascii	"D:\\Users\\nray\\Documents\\GitHub\\PSOC4MIOHAL\\PS"
 1172      73657273 
 1172      5C6E7261 
 1172      795C446F 
 1172      63756D65 
 1173 00c3 4F43344D 		.ascii	"OC4MIO_HAL.cydsn\000"
 1173      494F5F48 
 1173      414C2E63 
 1173      7964736E 
 1173      00
 1174              	.LASF5:
 1175 00d4 6C6F6E67 		.ascii	"long unsigned int\000"
 1175      20756E73 
 1175      69676E65 
 1175      6420696E 
 1175      7400
 1176              	.LASF3:
 1177 00e6 73686F72 		.ascii	"short unsigned int\000"
 1177      7420756E 
 1177      7369676E 
 1177      65642069 
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 36


 1177      6E7400
 1178              	.LASF23:
 1179 00f9 61646472 		.ascii	"addressMask\000"
 1179      6573734D 
 1179      61736B00 
 1180              	.LASF35:
 1181 0105 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\LCD_UART.c\000"
 1181      6E657261 
 1181      7465645F 
 1181      536F7572 
 1181      63655C50 
 1182              	.LASF12:
 1183 0129 646F7562 		.ascii	"double\000"
 1183      6C6500
 1184              	.LASF33:
 1185 0130 706F6C61 		.ascii	"polarity\000"
 1185      72697479 
 1185      00
 1186              	.LASF9:
 1187 0139 75696E74 		.ascii	"uint16\000"
 1187      313600
 1188              	.LASF30:
 1189 0140 4C43445F 		.ascii	"LCD_UartEnableCts\000"
 1189      55617274 
 1189      456E6162 
 1189      6C654374 
 1189      7300
 1190              	.LASF10:
 1191 0152 75696E74 		.ascii	"uint32\000"
 1191      333200
 1192              	.LASF8:
 1193 0159 756E7369 		.ascii	"unsigned int\000"
 1193      676E6564 
 1193      20696E74 
 1193      00
 1194              	.LASF22:
 1195 0166 61646472 		.ascii	"address\000"
 1195      65737300 
 1196              	.LASF7:
 1197 016e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1197      206C6F6E 
 1197      6720756E 
 1197      7369676E 
 1197      65642069 
 1198              	.LASF21:
 1199 0185 4C43445F 		.ascii	"LCD_UartSetRxAddressMask\000"
 1199      55617274 
 1199      53657452 
 1199      78416464 
 1199      72657373 
 1200              	.LASF32:
 1201 019e 4C43445F 		.ascii	"LCD_UartSetCtsPolarity\000"
 1201      55617274 
 1201      53657443 
 1201      7473506F 
 1201      6C617269 
 1202              	.LASF27:
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 37


 1203 01b5 62756649 		.ascii	"bufIndex\000"
 1203      6E646578 
 1203      00
 1204              	.LASF16:
 1205 01be 73697A65 		.ascii	"sizetype\000"
 1205      74797065 
 1205      00
 1206              	.LASF13:
 1207 01c7 63686172 		.ascii	"char8\000"
 1207      3800
 1208              	.LASF29:
 1209 01cd 74784461 		.ascii	"txDataByte\000"
 1209      74614279 
 1209      746500
 1210              	.LASF14:
 1211 01d8 63686172 		.ascii	"char\000"
 1211      00
 1212              	.LASF34:
 1213 01dd 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1213      4320342E 
 1213      392E3320 
 1213      32303135 
 1213      30333033 
 1214 0210 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1214      20726576 
 1214      6973696F 
 1214      6E203232 
 1214      31323230 
 1215 0243 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1215      66756E63 
 1215      74696F6E 
 1215      2D736563 
 1215      74696F6E 
 1216              	.LASF2:
 1217 026b 73686F72 		.ascii	"short int\000"
 1217      7420696E 
 1217      7400
 1218              	.LASF37:
 1219 0275 4C43445F 		.ascii	"LCD_IntrTxMask\000"
 1219      496E7472 
 1219      54784D61 
 1219      736B00
 1220              	.LASF4:
 1221 0284 6C6F6E67 		.ascii	"long int\000"
 1221      20696E74 
 1221      00
 1222              	.LASF24:
 1223 028d 6D617463 		.ascii	"matchReg\000"
 1223      68526567 
 1223      00
 1224              	.LASF0:
 1225 0296 7369676E 		.ascii	"signed char\000"
 1225      65642063 
 1225      68617200 
 1226              	.LASF38:
 1227 02a2 4C43445F 		.ascii	"LCD_SpiUartWriteTxData\000"
 1227      53706955 
ARM GAS  C:\Users\NRAY~1.PRI\AppData\Local\Temp\cc4P8oIp.s 			page 38


 1227      61727457 
 1227      72697465 
 1227      54784461 
 1228              	.LASF28:
 1229 02b9 4C43445F 		.ascii	"LCD_UartPutCRLF\000"
 1229      55617274 
 1229      50757443 
 1229      524C4600 
 1230              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
